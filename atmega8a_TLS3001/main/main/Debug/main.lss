
main.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         000002d4  00000000  00000000  00000054  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .data         00000000  00800060  00800060  00000328  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  2 .comment      00000030  00000000  00000000  00000328  2**0
                  CONTENTS, READONLY
  3 .note.gnu.avr.deviceinfo 0000003c  00000000  00000000  00000358  2**2
                  CONTENTS, READONLY
  4 .debug_aranges 00000068  00000000  00000000  00000394  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_info   000007d5  00000000  00000000  000003fc  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_abbrev 00000232  00000000  00000000  00000bd1  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_line   0000039d  00000000  00000000  00000e03  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_frame  000000a4  00000000  00000000  000011a0  2**2
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_str    000002b8  00000000  00000000  00001244  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_loc    000005b5  00000000  00000000  000014fc  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_ranges 00000048  00000000  00000000  00001ab1  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	12 c0       	rjmp	.+36     	; 0x26 <__ctors_end>
   2:	19 c0       	rjmp	.+50     	; 0x36 <__bad_interrupt>
   4:	18 c0       	rjmp	.+48     	; 0x36 <__bad_interrupt>
   6:	17 c0       	rjmp	.+46     	; 0x36 <__bad_interrupt>
   8:	16 c0       	rjmp	.+44     	; 0x36 <__bad_interrupt>
   a:	15 c0       	rjmp	.+42     	; 0x36 <__bad_interrupt>
   c:	14 c0       	rjmp	.+40     	; 0x36 <__bad_interrupt>
   e:	13 c0       	rjmp	.+38     	; 0x36 <__bad_interrupt>
  10:	12 c0       	rjmp	.+36     	; 0x36 <__bad_interrupt>
  12:	11 c0       	rjmp	.+34     	; 0x36 <__bad_interrupt>
  14:	10 c0       	rjmp	.+32     	; 0x36 <__bad_interrupt>
  16:	0f c0       	rjmp	.+30     	; 0x36 <__bad_interrupt>
  18:	0e c0       	rjmp	.+28     	; 0x36 <__bad_interrupt>
  1a:	0d c0       	rjmp	.+26     	; 0x36 <__bad_interrupt>
  1c:	0c c0       	rjmp	.+24     	; 0x36 <__bad_interrupt>
  1e:	0b c0       	rjmp	.+22     	; 0x36 <__bad_interrupt>
  20:	0a c0       	rjmp	.+20     	; 0x36 <__bad_interrupt>
  22:	09 c0       	rjmp	.+18     	; 0x36 <__bad_interrupt>
  24:	08 c0       	rjmp	.+16     	; 0x36 <__bad_interrupt>

00000026 <__ctors_end>:
  26:	11 24       	eor	r1, r1
  28:	1f be       	out	0x3f, r1	; 63
  2a:	cf e5       	ldi	r28, 0x5F	; 95
  2c:	d4 e0       	ldi	r29, 0x04	; 4
  2e:	de bf       	out	0x3e, r29	; 62
  30:	cd bf       	out	0x3d, r28	; 61
  32:	02 d0       	rcall	.+4      	; 0x38 <main>
  34:	4d c1       	rjmp	.+666    	; 0x2d0 <_exit>

00000036 <__bad_interrupt>:
  36:	e4 cf       	rjmp	.-56     	; 0x0 <__vectors>

00000038 <main>:
#include "TLS3001.h"


int main(void)
{
	TLS3001_Initial();
  38:	61 d0       	rcall	.+194    	; 0xfc <_Z15TLS3001_Initialv>
    while (1) 
    {
		TLS3001_Send_Sys();
  3a:	9d d0       	rcall	.+314    	; 0x176 <_Z16TLS3001_Send_Sysv>
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
  3c:	2f ef       	ldi	r18, 0xFF	; 255
  3e:	83 ec       	ldi	r24, 0xC3	; 195
  40:	99 e0       	ldi	r25, 0x09	; 9
  42:	21 50       	subi	r18, 0x01	; 1
  44:	80 40       	sbci	r24, 0x00	; 0
  46:	90 40       	sbci	r25, 0x00	; 0
  48:	e1 f7       	brne	.-8      	; 0x42 <__SREG__+0x3>
  4a:	00 c0       	rjmp	.+0      	; 0x4c <__SREG__+0xd>
  4c:	00 00       	nop
		_delay_ms(200);
		TLS3001_Send_Head();
  4e:	a3 d0       	rcall	.+326    	; 0x196 <_Z17TLS3001_Send_Headv>
		TLS3001_Send_RGB(4095,0,0);
  50:	40 e0       	ldi	r20, 0x00	; 0
  52:	50 e0       	ldi	r21, 0x00	; 0
  54:	60 e0       	ldi	r22, 0x00	; 0
  56:	70 e0       	ldi	r23, 0x00	; 0
  58:	8f ef       	ldi	r24, 0xFF	; 255
  5a:	9f e0       	ldi	r25, 0x0F	; 15
  5c:	a4 d0       	rcall	.+328    	; 0x1a6 <_Z16TLS3001_Send_RGBjjj>
		TLS3001_Send_RGB(4095,0,0);
  5e:	40 e0       	ldi	r20, 0x00	; 0
  60:	50 e0       	ldi	r21, 0x00	; 0
  62:	60 e0       	ldi	r22, 0x00	; 0
  64:	70 e0       	ldi	r23, 0x00	; 0
  66:	8f ef       	ldi	r24, 0xFF	; 255
  68:	9f e0       	ldi	r25, 0x0F	; 15
  6a:	9d d0       	rcall	.+314    	; 0x1a6 <_Z16TLS3001_Send_RGBjjj>
		TLS3001_Send_Reset();
  6c:	8c d0       	rcall	.+280    	; 0x186 <_Z18TLS3001_Send_Resetv>
  6e:	8f e9       	ldi	r24, 0x9F	; 159
  70:	9f e0       	ldi	r25, 0x0F	; 15
  72:	01 97       	sbiw	r24, 0x01	; 1
  74:	f1 f7       	brne	.-4      	; 0x72 <__SREG__+0x33>
  76:	00 c0       	rjmp	.+0      	; 0x78 <__SREG__+0x39>
  78:	00 00       	nop
		_delay_ms(1);
		TLS3001_Send_Sys();
  7a:	7d d0       	rcall	.+250    	; 0x176 <_Z16TLS3001_Send_Sysv>
  7c:	9f ef       	ldi	r25, 0xFF	; 255
  7e:	23 ec       	ldi	r18, 0xC3	; 195
  80:	89 e0       	ldi	r24, 0x09	; 9
  82:	91 50       	subi	r25, 0x01	; 1
  84:	20 40       	sbci	r18, 0x00	; 0
  86:	80 40       	sbci	r24, 0x00	; 0
  88:	e1 f7       	brne	.-8      	; 0x82 <__SREG__+0x43>
  8a:	00 c0       	rjmp	.+0      	; 0x8c <__SREG__+0x4d>
  8c:	00 00       	nop
		_delay_ms(200);
		TLS3001_Send_Head();
  8e:	83 d0       	rcall	.+262    	; 0x196 <_Z17TLS3001_Send_Headv>
		TLS3001_Send_RGB(0,4095,0);
  90:	40 e0       	ldi	r20, 0x00	; 0
  92:	50 e0       	ldi	r21, 0x00	; 0
  94:	6f ef       	ldi	r22, 0xFF	; 255
  96:	7f e0       	ldi	r23, 0x0F	; 15
  98:	80 e0       	ldi	r24, 0x00	; 0
  9a:	90 e0       	ldi	r25, 0x00	; 0
  9c:	84 d0       	rcall	.+264    	; 0x1a6 <_Z16TLS3001_Send_RGBjjj>
		TLS3001_Send_RGB(0,4095,0);
  9e:	40 e0       	ldi	r20, 0x00	; 0
  a0:	50 e0       	ldi	r21, 0x00	; 0
  a2:	6f ef       	ldi	r22, 0xFF	; 255
  a4:	7f e0       	ldi	r23, 0x0F	; 15
  a6:	80 e0       	ldi	r24, 0x00	; 0
  a8:	90 e0       	ldi	r25, 0x00	; 0
  aa:	7d d0       	rcall	.+250    	; 0x1a6 <_Z16TLS3001_Send_RGBjjj>
		TLS3001_Send_Reset();
  ac:	6c d0       	rcall	.+216    	; 0x186 <_Z18TLS3001_Send_Resetv>
  ae:	8f e9       	ldi	r24, 0x9F	; 159
  b0:	9f e0       	ldi	r25, 0x0F	; 15
  b2:	01 97       	sbiw	r24, 0x01	; 1
  b4:	f1 f7       	brne	.-4      	; 0xb2 <__SREG__+0x73>
  b6:	00 c0       	rjmp	.+0      	; 0xb8 <__SREG__+0x79>
  b8:	00 00       	nop
		_delay_ms(1);
		TLS3001_Send_Sys();
  ba:	5d d0       	rcall	.+186    	; 0x176 <_Z16TLS3001_Send_Sysv>
  bc:	9f ef       	ldi	r25, 0xFF	; 255
  be:	23 ec       	ldi	r18, 0xC3	; 195
  c0:	89 e0       	ldi	r24, 0x09	; 9
  c2:	91 50       	subi	r25, 0x01	; 1
  c4:	20 40       	sbci	r18, 0x00	; 0
  c6:	80 40       	sbci	r24, 0x00	; 0
  c8:	e1 f7       	brne	.-8      	; 0xc2 <__SREG__+0x83>
  ca:	00 c0       	rjmp	.+0      	; 0xcc <__SREG__+0x8d>
  cc:	00 00       	nop
		_delay_ms(200);
		TLS3001_Send_Head();
  ce:	63 d0       	rcall	.+198    	; 0x196 <_Z17TLS3001_Send_Headv>
		TLS3001_Send_RGB(0,0,4095);
  d0:	4f ef       	ldi	r20, 0xFF	; 255
  d2:	5f e0       	ldi	r21, 0x0F	; 15
  d4:	60 e0       	ldi	r22, 0x00	; 0
  d6:	70 e0       	ldi	r23, 0x00	; 0
  d8:	80 e0       	ldi	r24, 0x00	; 0
  da:	90 e0       	ldi	r25, 0x00	; 0
  dc:	64 d0       	rcall	.+200    	; 0x1a6 <_Z16TLS3001_Send_RGBjjj>
		TLS3001_Send_RGB(0,0,4095);
  de:	4f ef       	ldi	r20, 0xFF	; 255
  e0:	5f e0       	ldi	r21, 0x0F	; 15
  e2:	60 e0       	ldi	r22, 0x00	; 0
  e4:	70 e0       	ldi	r23, 0x00	; 0
  e6:	80 e0       	ldi	r24, 0x00	; 0
  e8:	90 e0       	ldi	r25, 0x00	; 0
  ea:	5d d0       	rcall	.+186    	; 0x1a6 <_Z16TLS3001_Send_RGBjjj>
		TLS3001_Send_Reset();
  ec:	4c d0       	rcall	.+152    	; 0x186 <_Z18TLS3001_Send_Resetv>
  ee:	8f e9       	ldi	r24, 0x9F	; 159
  f0:	9f e0       	ldi	r25, 0x0F	; 15
  f2:	01 97       	sbiw	r24, 0x01	; 1
  f4:	f1 f7       	brne	.-4      	; 0xf2 <__SREG__+0xb3>
  f6:	00 c0       	rjmp	.+0      	; 0xf8 <__SREG__+0xb9>
  f8:	00 00       	nop
  fa:	9f cf       	rjmp	.-194    	; 0x3a <main+0x2>

000000fc <_Z15TLS3001_Initialv>:
#include "TLS3001.h"
#include <avr/interrupt.h>

void TLS3001_Initial(void)
{
	DDRD |= 1<<PORTD7;
  fc:	8f 9a       	sbi	0x11, 7	; 17
	PORTD |=(1<<PIND7);
  fe:	97 9a       	sbi	0x12, 7	; 18
	
		DDR |=1<<PIN;		
 100:	89 9a       	sbi	0x11, 1	; 17
 102:	08 95       	ret

00000104 <_Z17TLS3001_Send_Bitsmh>:
}

void TLS3001_Send_Bits(unsigned long _long,unsigned char _n)
{
 104:	0f 93       	push	r16
 106:	1f 93       	push	r17
 108:	8b 01       	movw	r16, r22
 10a:	9c 01       	movw	r18, r24
	
	for (unsigned char i = 0; i < _n; i++)
 10c:	44 23       	and	r20, r20
 10e:	09 f4       	brne	.+2      	; 0x112 <_Z17TLS3001_Send_Bitsmh+0xe>
 110:	2f c0       	rjmp	.+94     	; 0x170 <_Z17TLS3001_Send_Bitsmh+0x6c>
 112:	90 e0       	ldi	r25, 0x00	; 0
			 nop();
			 nop();
		}
		else
		{
			POR &=_LOW_;
 114:	6c e0       	ldi	r22, 0x0C	; 12
			 for (uint8_t j = 0;j<12;j++) nop();
			 nop();
			POR |= _HIG_;
 116:	58 e0       	ldi	r21, 0x08	; 8
void TLS3001_Send_Bits(unsigned long _long,unsigned char _n)
{
	
	for (unsigned char i = 0; i < _n; i++)
	{
		if (_long&0x80000000)
 118:	33 23       	and	r19, r19
 11a:	94 f4       	brge	.+36     	; 0x140 <_Z17TLS3001_Send_Bitsmh+0x3c>
		{
			 POR |=_HIG_;
 11c:	91 9a       	sbi	0x12, 1	; 18
 11e:	86 2f       	mov	r24, r22
			 for (uint8_t j = 0;j<12;j++) nop();
 120:	00 00       	nop
 122:	81 50       	subi	r24, 0x01	; 1
 124:	e9 f7       	brne	.-6      	; 0x120 <_Z17TLS3001_Send_Bitsmh+0x1c>
			 nop();
 126:	00 00       	nop
			 POR &=_LOW_;
 128:	91 98       	cbi	0x12, 1	; 18
 12a:	85 2f       	mov	r24, r21
			 for (uint8_t j = 0;j<8;j++) nop();
 12c:	00 00       	nop
 12e:	81 50       	subi	r24, 0x01	; 1
 130:	e9 f7       	brne	.-6      	; 0x12c <_Z17TLS3001_Send_Bitsmh+0x28>
	...
			 nop();
			 nop();
			 nop();
			 nop();
			 nop();
			 nop();
 13e:	11 c0       	rjmp	.+34     	; 0x162 <_Z17TLS3001_Send_Bitsmh+0x5e>
		}
		else
		{
			POR &=_LOW_;
 140:	91 98       	cbi	0x12, 1	; 18
 142:	86 2f       	mov	r24, r22
			 for (uint8_t j = 0;j<12;j++) nop();
 144:	00 00       	nop
 146:	81 50       	subi	r24, 0x01	; 1
 148:	e9 f7       	brne	.-6      	; 0x144 <_Z17TLS3001_Send_Bitsmh+0x40>
			 nop();
 14a:	00 00       	nop
			POR |= _HIG_;
 14c:	91 9a       	sbi	0x12, 1	; 18
 14e:	85 2f       	mov	r24, r21
			 for (uint8_t j = 0;j<8;j++) nop();
 150:	00 00       	nop
 152:	81 50       	subi	r24, 0x01	; 1
 154:	e9 f7       	brne	.-6      	; 0x150 <_Z17TLS3001_Send_Bitsmh+0x4c>
	...
			 nop();
			 nop();
			 nop();
			 nop();
		}
		_long <<=1;
 162:	00 0f       	add	r16, r16
 164:	11 1f       	adc	r17, r17
 166:	22 1f       	adc	r18, r18
 168:	33 1f       	adc	r19, r19
}

void TLS3001_Send_Bits(unsigned long _long,unsigned char _n)
{
	
	for (unsigned char i = 0; i < _n; i++)
 16a:	9f 5f       	subi	r25, 0xFF	; 255
 16c:	94 13       	cpse	r25, r20
 16e:	d4 cf       	rjmp	.-88     	; 0x118 <_Z17TLS3001_Send_Bitsmh+0x14>
			 nop();
			 nop();
		}
		_long <<=1;
	}
}
 170:	1f 91       	pop	r17
 172:	0f 91       	pop	r16
 174:	08 95       	ret

00000176 <_Z16TLS3001_Send_Sysv>:
void TLS3001_Send_Sys(void)
{
	TLS3001_Send_Bits(0xFFFE2000,30);
 176:	4e e1       	ldi	r20, 0x1E	; 30
 178:	60 e0       	ldi	r22, 0x00	; 0
 17a:	70 e2       	ldi	r23, 0x20	; 32
 17c:	8e ef       	ldi	r24, 0xFE	; 254
 17e:	9f ef       	ldi	r25, 0xFF	; 255
 180:	c1 df       	rcall	.-126    	; 0x104 <_Z17TLS3001_Send_Bitsmh>
	POR &=_LOW_;
 182:	91 98       	cbi	0x12, 1	; 18
 184:	08 95       	ret

00000186 <_Z18TLS3001_Send_Resetv>:
}
void TLS3001_Send_Reset(void)
{
	TLS3001_Send_Bits(0xFFFE8000,19);
 186:	43 e1       	ldi	r20, 0x13	; 19
 188:	60 e0       	ldi	r22, 0x00	; 0
 18a:	70 e8       	ldi	r23, 0x80	; 128
 18c:	8e ef       	ldi	r24, 0xFE	; 254
 18e:	9f ef       	ldi	r25, 0xFF	; 255
 190:	b9 df       	rcall	.-142    	; 0x104 <_Z17TLS3001_Send_Bitsmh>
	POR &=_LOW_;
 192:	91 98       	cbi	0x12, 1	; 18
 194:	08 95       	ret

00000196 <_Z17TLS3001_Send_Headv>:
}
void TLS3001_Send_Head(void)
{
	TLS3001_Send_Bits(0xFFFE4000,19);
 196:	43 e1       	ldi	r20, 0x13	; 19
 198:	60 e0       	ldi	r22, 0x00	; 0
 19a:	70 e4       	ldi	r23, 0x40	; 64
 19c:	8e ef       	ldi	r24, 0xFE	; 254
 19e:	9f ef       	ldi	r25, 0xFF	; 255
 1a0:	b1 df       	rcall	.-158    	; 0x104 <_Z17TLS3001_Send_Bitsmh>
	POR &=_LOW_;
 1a2:	91 98       	cbi	0x12, 1	; 18
 1a4:	08 95       	ret

000001a6 <_Z16TLS3001_Send_RGBjjj>:
}

void TLS3001_Send_RGB(unsigned int _R, unsigned int _G,unsigned int _B)
{
 1a6:	fc 01       	movw	r30, r24
 1a8:	2d e0       	ldi	r18, 0x0D	; 13
			nop();
			nop();
		}
		else
		{
			POR &=_LOW_;
 1aa:	3c e0       	ldi	r19, 0x0C	; 12
			for (uint8_t j = 0;j<12;j++) nop();
			nop();
			POR |= _HIG_;
 1ac:	88 e0       	ldi	r24, 0x08	; 8

void TLS3001_Send_RGB(unsigned int _R, unsigned int _G,unsigned int _B)
{
	for (unsigned char i = 0; i < 13; i++)
	{
		if (_R&0x1000)
 1ae:	f4 ff       	sbrs	r31, 4
 1b0:	14 c0       	rjmp	.+40     	; 0x1da <_Z16TLS3001_Send_RGBjjj+0x34>
		{
			POR |=_HIG_;
 1b2:	91 9a       	sbi	0x12, 1	; 18
 1b4:	93 2f       	mov	r25, r19
			for (uint8_t j = 0;j<12;j++) nop();
 1b6:	00 00       	nop
 1b8:	91 50       	subi	r25, 0x01	; 1
 1ba:	e9 f7       	brne	.-6      	; 0x1b6 <_Z16TLS3001_Send_RGBjjj+0x10>
			nop();
 1bc:	00 00       	nop
			
			POR &=_LOW_;
 1be:	91 98       	cbi	0x12, 1	; 18
 1c0:	98 2f       	mov	r25, r24
			for (uint8_t j = 0;j<8;j++) nop();
 1c2:	00 00       	nop
 1c4:	91 50       	subi	r25, 0x01	; 1
 1c6:	e9 f7       	brne	.-6      	; 0x1c2 <_Z16TLS3001_Send_RGBjjj+0x1c>
	...
			nop();
			nop();
			nop();
			nop();
			nop();
			nop();
 1d8:	13 c0       	rjmp	.+38     	; 0x200 <_Z16TLS3001_Send_RGBjjj+0x5a>
		}
		else
		{
			POR &=_LOW_;
 1da:	91 98       	cbi	0x12, 1	; 18
 1dc:	93 2f       	mov	r25, r19
			for (uint8_t j = 0;j<12;j++) nop();
 1de:	00 00       	nop
 1e0:	91 50       	subi	r25, 0x01	; 1
 1e2:	e9 f7       	brne	.-6      	; 0x1de <_Z16TLS3001_Send_RGBjjj+0x38>
			nop();
 1e4:	00 00       	nop
			POR |= _HIG_;
 1e6:	91 9a       	sbi	0x12, 1	; 18
 1e8:	98 2f       	mov	r25, r24
			for (uint8_t j = 0;j<8;j++) nop();
 1ea:	00 00       	nop
 1ec:	91 50       	subi	r25, 0x01	; 1
 1ee:	e9 f7       	brne	.-6      	; 0x1ea <_Z16TLS3001_Send_RGBjjj+0x44>
	...
			nop();
			nop();
			nop();
			nop();
		}
		_R <<=1;
 200:	ee 0f       	add	r30, r30
 202:	ff 1f       	adc	r31, r31
 204:	21 50       	subi	r18, 0x01	; 1
	POR &=_LOW_;
}

void TLS3001_Send_RGB(unsigned int _R, unsigned int _G,unsigned int _B)
{
	for (unsigned char i = 0; i < 13; i++)
 206:	09 f0       	breq	.+2      	; 0x20a <_Z16TLS3001_Send_RGBjjj+0x64>
 208:	d2 cf       	rjmp	.-92     	; 0x1ae <_Z16TLS3001_Send_RGBjjj+0x8>
 20a:	9d e0       	ldi	r25, 0x0D	; 13
			nop();
			nop();
		}
		else
		{
			POR &=_LOW_;
 20c:	3c e0       	ldi	r19, 0x0C	; 12
			for (uint8_t j = 0;j<12;j++) nop();
			nop();
			POR |= _HIG_;
 20e:	28 e0       	ldi	r18, 0x08	; 8
		}
		_R <<=1;
	}
	for (unsigned char i = 0; i < 13; i++)
	{
		if (_G&0x1000)
 210:	74 ff       	sbrs	r23, 4
 212:	14 c0       	rjmp	.+40     	; 0x23c <_Z16TLS3001_Send_RGBjjj+0x96>
		{
			POR |=_HIG_;
 214:	91 9a       	sbi	0x12, 1	; 18
 216:	83 2f       	mov	r24, r19
			for (uint8_t j = 0;j<12;j++) nop();
 218:	00 00       	nop
 21a:	81 50       	subi	r24, 0x01	; 1
 21c:	e9 f7       	brne	.-6      	; 0x218 <_Z16TLS3001_Send_RGBjjj+0x72>
			nop();
 21e:	00 00       	nop
			
			POR &=_LOW_;
 220:	91 98       	cbi	0x12, 1	; 18
 222:	82 2f       	mov	r24, r18
			for (uint8_t j = 0;j<8;j++) nop();
 224:	00 00       	nop
 226:	81 50       	subi	r24, 0x01	; 1
 228:	e9 f7       	brne	.-6      	; 0x224 <_Z16TLS3001_Send_RGBjjj+0x7e>
	...
			nop();
			nop();
			nop();
			nop();
			nop();
			nop();
 23a:	13 c0       	rjmp	.+38     	; 0x262 <_Z16TLS3001_Send_RGBjjj+0xbc>
		}
		else
		{
			POR &=_LOW_;
 23c:	91 98       	cbi	0x12, 1	; 18
 23e:	83 2f       	mov	r24, r19
			for (uint8_t j = 0;j<12;j++) nop();
 240:	00 00       	nop
 242:	81 50       	subi	r24, 0x01	; 1
 244:	e9 f7       	brne	.-6      	; 0x240 <_Z16TLS3001_Send_RGBjjj+0x9a>
			nop();
 246:	00 00       	nop
			POR |= _HIG_;
 248:	91 9a       	sbi	0x12, 1	; 18
 24a:	82 2f       	mov	r24, r18
			for (uint8_t j = 0;j<8;j++) nop();
 24c:	00 00       	nop
 24e:	81 50       	subi	r24, 0x01	; 1
 250:	e9 f7       	brne	.-6      	; 0x24c <_Z16TLS3001_Send_RGBjjj+0xa6>
	...
			nop();
			nop();
			nop();
			nop();
		}
		_G <<=1;
 262:	66 0f       	add	r22, r22
 264:	77 1f       	adc	r23, r23
 266:	91 50       	subi	r25, 0x01	; 1
			nop();
			nop();
		}
		_R <<=1;
	}
	for (unsigned char i = 0; i < 13; i++)
 268:	09 f0       	breq	.+2      	; 0x26c <_Z16TLS3001_Send_RGBjjj+0xc6>
 26a:	d2 cf       	rjmp	.-92     	; 0x210 <_Z16TLS3001_Send_RGBjjj+0x6a>
 26c:	9d e0       	ldi	r25, 0x0D	; 13
			nop();
			nop();
		}
		else
		{
			POR &=_LOW_;
 26e:	3c e0       	ldi	r19, 0x0C	; 12
			for (uint8_t j = 0;j<12;j++) nop();
			nop();
			POR |= _HIG_;
 270:	28 e0       	ldi	r18, 0x08	; 8
		}
		_G <<=1;
	}
	for (unsigned char i = 0; i < 13; i++)
	{
		if (_B&0x1000)
 272:	54 ff       	sbrs	r21, 4
 274:	14 c0       	rjmp	.+40     	; 0x29e <_Z16TLS3001_Send_RGBjjj+0xf8>
		{
			POR |=_HIG_;
 276:	91 9a       	sbi	0x12, 1	; 18
 278:	83 2f       	mov	r24, r19
			for (uint8_t j = 0;j<12;j++) nop();
 27a:	00 00       	nop
 27c:	81 50       	subi	r24, 0x01	; 1
 27e:	e9 f7       	brne	.-6      	; 0x27a <_Z16TLS3001_Send_RGBjjj+0xd4>
			nop();
 280:	00 00       	nop
			
			POR &=_LOW_;
 282:	91 98       	cbi	0x12, 1	; 18
 284:	82 2f       	mov	r24, r18
			for (uint8_t j = 0;j<8;j++) nop();
 286:	00 00       	nop
 288:	81 50       	subi	r24, 0x01	; 1
 28a:	e9 f7       	brne	.-6      	; 0x286 <_Z16TLS3001_Send_RGBjjj+0xe0>
	...
			nop();
			nop();
			nop();
			nop();
			nop();
			nop();
 29c:	13 c0       	rjmp	.+38     	; 0x2c4 <_Z16TLS3001_Send_RGBjjj+0x11e>
		}
		else
		{
			POR &=_LOW_;
 29e:	91 98       	cbi	0x12, 1	; 18
 2a0:	83 2f       	mov	r24, r19
			for (uint8_t j = 0;j<12;j++) nop();
 2a2:	00 00       	nop
 2a4:	81 50       	subi	r24, 0x01	; 1
 2a6:	e9 f7       	brne	.-6      	; 0x2a2 <_Z16TLS3001_Send_RGBjjj+0xfc>
			nop();
 2a8:	00 00       	nop
			POR |= _HIG_;
 2aa:	91 9a       	sbi	0x12, 1	; 18
 2ac:	82 2f       	mov	r24, r18
			for (uint8_t j = 0;j<8;j++) nop();
 2ae:	00 00       	nop
 2b0:	81 50       	subi	r24, 0x01	; 1
 2b2:	e9 f7       	brne	.-6      	; 0x2ae <_Z16TLS3001_Send_RGBjjj+0x108>
	...
			nop();
			nop();
			nop();
			nop();
		}
		_B <<=1;
 2c4:	44 0f       	add	r20, r20
 2c6:	55 1f       	adc	r21, r21
 2c8:	91 50       	subi	r25, 0x01	; 1
			nop();
			nop();
		}
		_G <<=1;
	}
	for (unsigned char i = 0; i < 13; i++)
 2ca:	09 f0       	breq	.+2      	; 0x2ce <_Z16TLS3001_Send_RGBjjj+0x128>
 2cc:	d2 cf       	rjmp	.-92     	; 0x272 <_Z16TLS3001_Send_RGBjjj+0xcc>
			nop();
		}
		_B <<=1;
	}
	
 2ce:	08 95       	ret

000002d0 <_exit>:
 2d0:	f8 94       	cli

000002d2 <__stop_program>:
 2d2:	ff cf       	rjmp	.-2      	; 0x2d2 <__stop_program>
