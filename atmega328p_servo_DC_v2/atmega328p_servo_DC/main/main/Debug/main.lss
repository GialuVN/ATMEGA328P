
main.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         00000fc0  00000000  00000000  00000074  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .bss          00000033  00800100  00800100  00001034  2**0
                  ALLOC
  2 .comment      00000030  00000000  00000000  00001034  2**0
                  CONTENTS, READONLY
  3 .debug_aranges 000001d8  00000000  00000000  00001064  2**0
                  CONTENTS, READONLY, DEBUGGING
  4 .debug_info   00001588  00000000  00000000  0000123c  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_abbrev 00000755  00000000  00000000  000027c4  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_line   000008fb  00000000  00000000  00002f19  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_frame  000004d0  00000000  00000000  00003814  2**2
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_str    0000080a  00000000  00000000  00003ce4  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_loc    00000f33  00000000  00000000  000044ee  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_ranges 000001a8  00000000  00000000  00005421  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 48 00 	jmp	0x90	; 0x90 <__ctors_end>
   4:	0c 94 5a 00 	jmp	0xb4	; 0xb4 <__bad_interrupt>
   8:	0c 94 5a 00 	jmp	0xb4	; 0xb4 <__bad_interrupt>
   c:	0c 94 20 05 	jmp	0xa40	; 0xa40 <__vector_3>
  10:	0c 94 6b 02 	jmp	0x4d6	; 0x4d6 <__vector_4>
  14:	0c 94 5a 00 	jmp	0xb4	; 0xb4 <__bad_interrupt>
  18:	0c 94 5a 00 	jmp	0xb4	; 0xb4 <__bad_interrupt>
  1c:	0c 94 15 02 	jmp	0x42a	; 0x42a <__vector_7>
  20:	0c 94 5a 00 	jmp	0xb4	; 0xb4 <__bad_interrupt>
  24:	0c 94 5a 00 	jmp	0xb4	; 0xb4 <__bad_interrupt>
  28:	0c 94 5a 00 	jmp	0xb4	; 0xb4 <__bad_interrupt>
  2c:	0c 94 5a 00 	jmp	0xb4	; 0xb4 <__bad_interrupt>
  30:	0c 94 5a 00 	jmp	0xb4	; 0xb4 <__bad_interrupt>
  34:	0c 94 5a 00 	jmp	0xb4	; 0xb4 <__bad_interrupt>
  38:	0c 94 d5 04 	jmp	0x9aa	; 0x9aa <__vector_14>
  3c:	0c 94 5a 00 	jmp	0xb4	; 0xb4 <__bad_interrupt>
  40:	0c 94 5a 00 	jmp	0xb4	; 0xb4 <__bad_interrupt>
  44:	0c 94 5a 00 	jmp	0xb4	; 0xb4 <__bad_interrupt>
  48:	0c 94 5a 00 	jmp	0xb4	; 0xb4 <__bad_interrupt>
  4c:	0c 94 5a 00 	jmp	0xb4	; 0xb4 <__bad_interrupt>
  50:	0c 94 5a 00 	jmp	0xb4	; 0xb4 <__bad_interrupt>
  54:	0c 94 5a 00 	jmp	0xb4	; 0xb4 <__bad_interrupt>
  58:	0c 94 5a 00 	jmp	0xb4	; 0xb4 <__bad_interrupt>
  5c:	0c 94 5a 00 	jmp	0xb4	; 0xb4 <__bad_interrupt>
  60:	0c 94 5a 00 	jmp	0xb4	; 0xb4 <__bad_interrupt>
  64:	0c 94 5a 00 	jmp	0xb4	; 0xb4 <__bad_interrupt>
  68:	6f 04       	cpc	r6, r15
  6a:	79 04       	cpc	r7, r9
  6c:	83 04       	cpc	r8, r3
  6e:	8d 04       	cpc	r8, r13
  70:	97 04       	cpc	r9, r7
  72:	a1 04       	cpc	r10, r1
  74:	ab 04       	cpc	r10, r11
  76:	b5 04       	cpc	r11, r5
  78:	bf 04       	cpc	r11, r15
  7a:	c9 04       	cpc	r12, r9

0000007c <__trampolines_end>:
  7c:	c0 f9       	bld	r28, 0
  7e:	a4 b0       	in	r10, 0x04	; 4
  80:	99 92       	st	Y+, r9
  82:	82 f8       	bld	r8, 2
  84:	80 90 ff 88 	lds	r8, 0x88FF
  88:	83 c6       	rjmp	.+3334   	; 0xd90 <__floatsisf+0x52>
  8a:	a1 86       	std	Z+9, r10	; 0x09
  8c:	8e c2       	rjmp	.+1308   	; 0x5aa <__vector_4+0xd4>
  8e:	89 00       	.word	0x0089	; ????

00000090 <__ctors_end>:
  90:	11 24       	eor	r1, r1
  92:	1f be       	out	0x3f, r1	; 63
  94:	cf ef       	ldi	r28, 0xFF	; 255
  96:	d8 e0       	ldi	r29, 0x08	; 8
  98:	de bf       	out	0x3e, r29	; 62
  9a:	cd bf       	out	0x3d, r28	; 61

0000009c <__do_clear_bss>:
  9c:	21 e0       	ldi	r18, 0x01	; 1
  9e:	a0 e0       	ldi	r26, 0x00	; 0
  a0:	b1 e0       	ldi	r27, 0x01	; 1
  a2:	01 c0       	rjmp	.+2      	; 0xa6 <.do_clear_bss_start>

000000a4 <.do_clear_bss_loop>:
  a4:	1d 92       	st	X+, r1

000000a6 <.do_clear_bss_start>:
  a6:	a3 33       	cpi	r26, 0x33	; 51
  a8:	b2 07       	cpc	r27, r18
  aa:	e1 f7       	brne	.-8      	; 0xa4 <.do_clear_bss_loop>
  ac:	0e 94 f9 04 	call	0x9f2	; 0x9f2 <main>
  b0:	0c 94 de 07 	jmp	0xfbc	; 0xfbc <_exit>

000000b4 <__bad_interrupt>:
  b4:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

000000b8 <SERVO_default>:
	
	if ((kp*_e/10)>SERVO_MAX_FORCE) kp_part = SERVO_MAX_FORCE;
	else kp_part =(unsigned int)(kp*_e/10);
	
	if ((kd*servo_ctr.servo_speed)>SERVO_MAX_FORCE) kd_part = SERVO_MAX_FORCE;
	else kd_part =kd*servo_ctr.servo_speed;
  b8:	84 ef       	ldi	r24, 0xF4	; 244
  ba:	91 e0       	ldi	r25, 0x01	; 1
  bc:	90 93 0e 01 	sts	0x010E, r25
  c0:	80 93 0d 01 	sts	0x010D, r24
	
	
	if ((kp*_e/10)>SERVO_MAX_FORCE) kp_part = SERVO_MAX_FORCE;
	else kp_part =(unsigned int)(kp*_e/10);
	
	if ((kd*servo_ctr.servo_speed)>SERVO_MAX_FORCE) kd_part = SERVO_MAX_FORCE;
  c4:	10 92 06 01 	sts	0x0106, r1
	else kd_part =kd*servo_ctr.servo_speed;
	
	
	if (_e>SERVO_MAX_FORCE) servo_pid.servo_pos_i= KI_POS_MIN;
  c8:	80 e1       	ldi	r24, 0x10	; 16
  ca:	97 e2       	ldi	r25, 0x27	; 39
  cc:	a0 e0       	ldi	r26, 0x00	; 0
  ce:	b0 e0       	ldi	r27, 0x00	; 0
  d0:	80 93 09 01 	sts	0x0109, r24
  d4:	90 93 0a 01 	sts	0x010A, r25
  d8:	a0 93 0b 01 	sts	0x010B, r26
  dc:	b0 93 0c 01 	sts	0x010C, r27
  e0:	10 92 08 01 	sts	0x0108, r1
  e4:	10 92 07 01 	sts	0x0107, r1
	unsigned int _e;
	unsigned int kp_part;
	unsigned int kd_part;
	double ki_part;
	unsigned int pid;
	ki_part = 0;
  e8:	81 e0       	ldi	r24, 0x01	; 1
  ea:	80 93 11 01 	sts	0x0111, r24
	
	
	if (_e>SERVO_MAX_FORCE) servo_pid.servo_pos_i= KI_POS_MIN;
	else
	{
		if ((((double)ki*_e/100)+servo_pid.servo_pos_i)>SERVO_MAX_FORCE) servo_pid.servo_pos_i=SERVO_MAX_FORCE;
  ee:	80 e5       	ldi	r24, 0x50	; 80
  f0:	93 ec       	ldi	r25, 0xC3	; 195
  f2:	a0 e0       	ldi	r26, 0x00	; 0
  f4:	b0 e0       	ldi	r27, 0x00	; 0
  f6:	80 93 20 01 	sts	0x0120, r24
  fa:	90 93 21 01 	sts	0x0121, r25
  fe:	a0 93 22 01 	sts	0x0122, r26
 102:	b0 93 23 01 	sts	0x0123, r27
 106:	08 95       	ret

00000108 <SERVO_DIR>:
 108:	81 11       	cpse	r24, r1
 10a:	02 c0       	rjmp	.+4      	; 0x110 <SERVO_DIR+0x8>
 10c:	2c 9a       	sbi	0x05, 4	; 5
 10e:	08 95       	ret
 110:	2c 98       	cbi	0x05, 4	; 5
 112:	08 95       	ret

00000114 <SERVO_FORCE>:
 114:	81 15       	cp	r24, r1
 116:	24 e0       	ldi	r18, 0x04	; 4
 118:	92 07       	cpc	r25, r18
 11a:	44 f4       	brge	.+16     	; 0x12c <SERVO_FORCE+0x18>
 11c:	2f ef       	ldi	r18, 0xFF	; 255
 11e:	33 e0       	ldi	r19, 0x03	; 3
 120:	a9 01       	movw	r20, r18
 122:	48 1b       	sub	r20, r24
 124:	59 0b       	sbc	r21, r25
 126:	ca 01       	movw	r24, r20
 128:	0e 94 12 05 	call	0xa24	; 0xa24 <pwm_servo_timer1_OCR1B_updata>
 12c:	08 95       	ret

0000012e <SERVO_POS_PID>:
 12e:	4f 92       	push	r4
 130:	5f 92       	push	r5
 132:	6f 92       	push	r6
 134:	7f 92       	push	r7
 136:	af 92       	push	r10
 138:	bf 92       	push	r11
 13a:	cf 92       	push	r12
 13c:	df 92       	push	r13
 13e:	ef 92       	push	r14
 140:	ff 92       	push	r15
 142:	0f 93       	push	r16
 144:	1f 93       	push	r17
 146:	cf 93       	push	r28
 148:	df 93       	push	r29
 14a:	ec 01       	movw	r28, r24
 14c:	5b 01       	movw	r10, r22
 14e:	fa 01       	movw	r30, r20
 150:	80 91 09 01 	lds	r24, 0x0109
 154:	90 91 0a 01 	lds	r25, 0x010A
 158:	a0 91 0b 01 	lds	r26, 0x010B
 15c:	b0 91 0c 01 	lds	r27, 0x010C
 160:	40 91 20 01 	lds	r20, 0x0120
		else servo_pid.servo_pos_i+=(double)ki*_e/100;
 164:	50 91 21 01 	lds	r21, 0x0121
 168:	60 91 22 01 	lds	r22, 0x0122
 16c:	70 91 23 01 	lds	r23, 0x0123
 170:	84 1b       	sub	r24, r20
 172:	95 0b       	sbc	r25, r21
 174:	a6 0b       	sbc	r26, r22
 176:	b7 0b       	sbc	r27, r23
 178:	2c 01       	movw	r4, r24
 17a:	3d 01       	movw	r6, r26
 17c:	3a f4       	brpl	.+14     	; 0x18c <SERVO_POS_PID+0x5e>
 17e:	44 24       	eor	r4, r4
 180:	55 24       	eor	r5, r5
 182:	32 01       	movw	r6, r4
 184:	48 1a       	sub	r4, r24
 186:	59 0a       	sbc	r5, r25
 188:	6a 0a       	sbc	r6, r26
 18a:	7b 0a       	sbc	r7, r27
		ki_part= servo_pid.servo_pos_i;
 18c:	73 01       	movw	r14, r6
 18e:	62 01       	movw	r12, r4
 190:	de 01       	movw	r26, r28
 192:	a3 01       	movw	r20, r6
 194:	92 01       	movw	r18, r4
 196:	0e 94 cb 07 	call	0xf96	; 0xf96 <__mulshisi3>
 19a:	61 15       	cp	r22, r1
	}
	
	if ((kp_part+ki_part+kd_part)>SERVO_MAX_FORCE) pid=SERVO_MAX_FORCE;
 19c:	74 40       	sbci	r23, 0x04	; 4
 19e:	81 05       	cpc	r24, r1
 1a0:	91 05       	cpc	r25, r1
 1a2:	40 f4       	brcc	.+16     	; 0x1b4 <SERVO_POS_PID+0x86>
 1a4:	c4 9d       	mul	r28, r4
 1a6:	80 01       	movw	r16, r0
 1a8:	c5 9d       	mul	r28, r5
 1aa:	10 0d       	add	r17, r0
 1ac:	d4 9d       	mul	r29, r4
 1ae:	10 0d       	add	r17, r0
 1b0:	11 24       	eor	r1, r1
 1b2:	02 c0       	rjmp	.+4      	; 0x1b8 <SERVO_POS_PID+0x8a>
 1b4:	0f ef       	ldi	r16, 0xFF	; 255
 1b6:	13 e0       	ldi	r17, 0x03	; 3
 1b8:	20 91 1a 01 	lds	r18, 0x011A
 1bc:	30 91 1b 01 	lds	r19, 0x011B
 1c0:	e2 9f       	mul	r30, r18
 1c2:	c0 01       	movw	r24, r0
 1c4:	e3 9f       	mul	r30, r19
 1c6:	90 0d       	add	r25, r0
 1c8:	f2 9f       	mul	r31, r18
 1ca:	90 0d       	add	r25, r0
 1cc:	11 24       	eor	r1, r1
 1ce:	81 15       	cp	r24, r1
 1d0:	94 40       	sbci	r25, 0x04	; 4
 1d2:	60 f4       	brcc	.+24     	; 0x1ec <SERVO_POS_PID+0xbe>
 1d4:	80 91 1a 01 	lds	r24, 0x011A
 1d8:	90 91 1b 01 	lds	r25, 0x011B
	else pid =kp_part+ki_part+kd_part;
 1dc:	e8 9f       	mul	r30, r24
 1de:	e0 01       	movw	r28, r0
 1e0:	e9 9f       	mul	r30, r25
 1e2:	d0 0d       	add	r29, r0
 1e4:	f8 9f       	mul	r31, r24
 1e6:	d0 0d       	add	r29, r0
		if ((((double)ki*_e/100)+servo_pid.servo_pos_i)>SERVO_MAX_FORCE) servo_pid.servo_pos_i=SERVO_MAX_FORCE;
		else servo_pid.servo_pos_i+=(double)ki*_e/100;
		ki_part= servo_pid.servo_pos_i;
	}
	
	if ((kp_part+ki_part+kd_part)>SERVO_MAX_FORCE) pid=SERVO_MAX_FORCE;
 1e8:	11 24       	eor	r1, r1
 1ea:	02 c0       	rjmp	.+4      	; 0x1f0 <SERVO_POS_PID+0xc2>
	else pid =kp_part+ki_part+kd_part;
	
	if (servo_ctr.servo_position>servo_input.servo_input_pos)
 1ec:	cf ef       	ldi	r28, 0xFF	; 255
 1ee:	d3 e0       	ldi	r29, 0x03	; 3
 1f0:	c1 14       	cp	r12, r1
 1f2:	84 e0       	ldi	r24, 0x04	; 4
 1f4:	d8 06       	cpc	r13, r24
 1f6:	e1 04       	cpc	r14, r1
 1f8:	f1 04       	cpc	r15, r1
 1fa:	60 f0       	brcs	.+24     	; 0x214 <SERVO_POS_PID+0xe6>
 1fc:	10 92 00 01 	sts	0x0100, r1
 200:	10 92 01 01 	sts	0x0101, r1
 204:	10 92 02 01 	sts	0x0102, r1
 208:	10 92 03 01 	sts	0x0103, r1
 20c:	c1 2c       	mov	r12, r1
 20e:	d1 2c       	mov	r13, r1
 210:	76 01       	movw	r14, r12
 212:	56 c0       	rjmp	.+172    	; 0x2c0 <SERVO_POS_PID+0x192>
 214:	b5 01       	movw	r22, r10
	{
		SERVO_FORCE(pid);
 216:	88 27       	eor	r24, r24
 218:	77 fd       	sbrc	r23, 7
 21a:	80 95       	com	r24
		SERVO_DIR(TURN_LEFT);
 21c:	98 2f       	mov	r25, r24
 21e:	0e 94 9f 06 	call	0xd3e	; 0xd3e <__floatsisf>
 222:	2b 01       	movw	r4, r22
	}
	
	else if (servo_ctr.servo_position<servo_input.servo_input_pos)
 224:	3c 01       	movw	r6, r24
 226:	c7 01       	movw	r24, r14
 228:	b6 01       	movw	r22, r12
 22a:	0e 94 9d 06 	call	0xd3a	; 0xd3a <__floatunsisf>
 22e:	9b 01       	movw	r18, r22
 230:	ac 01       	movw	r20, r24
 232:	c3 01       	movw	r24, r6
 234:	b2 01       	movw	r22, r4
 236:	0e 94 2f 07 	call	0xe5e	; 0xe5e <__mulsf3>
 23a:	20 e0       	ldi	r18, 0x00	; 0
 23c:	30 e0       	ldi	r19, 0x00	; 0
 23e:	4a e7       	ldi	r20, 0x7A	; 122
 240:	53 e4       	ldi	r21, 0x43	; 67
 242:	0e 94 09 06 	call	0xc12	; 0xc12 <__divsf3>
 246:	6b 01       	movw	r12, r22
 248:	7c 01       	movw	r14, r24
 24a:	20 91 00 01 	lds	r18, 0x0100
	{
		SERVO_FORCE(pid);
 24e:	30 91 01 01 	lds	r19, 0x0101
 252:	40 91 02 01 	lds	r20, 0x0102
		SERVO_DIR(TURN_RIGHT);
 256:	50 91 03 01 	lds	r21, 0x0103
 25a:	0e 94 a5 05 	call	0xb4a	; 0xb4a <__addsf3>
	}
	
	else
	{
		servo_pid.servo_pos_i=KI_POS_MIN;
 25e:	20 e0       	ldi	r18, 0x00	; 0
 260:	30 ec       	ldi	r19, 0xC0	; 192
 262:	4f e7       	ldi	r20, 0x7F	; 127
 264:	54 e4       	ldi	r21, 0x44	; 68
 266:	0e 94 2b 07 	call	0xe56	; 0xe56 <__gesf2>
 26a:	18 16       	cp	r1, r24
 26c:	6c f4       	brge	.+26     	; 0x288 <SERVO_POS_PID+0x15a>
 26e:	80 e0       	ldi	r24, 0x00	; 0
 270:	90 e0       	ldi	r25, 0x00	; 0
 272:	a8 e4       	ldi	r26, 0x48	; 72
		SERVO_FORCE(0);
 274:	b2 e4       	ldi	r27, 0x42	; 66
 276:	80 93 00 01 	sts	0x0100, r24
 27a:	90 93 01 01 	sts	0x0101, r25
	
	
	
	
	
}
 27e:	a0 93 02 01 	sts	0x0102, r26
 282:	b0 93 03 01 	sts	0x0103, r27
 286:	14 c0       	rjmp	.+40     	; 0x2b0 <SERVO_POS_PID+0x182>
 288:	0f 2e       	mov	r0, r31
 28a:	f0 e0       	ldi	r31, 0x00	; 0
 28c:	af 2e       	mov	r10, r31
 28e:	f1 e0       	ldi	r31, 0x01	; 1
 290:	bf 2e       	mov	r11, r31
	
	if (_e>SERVO_MAX_FORCE) servo_pid.servo_pos_i= 0;
	else
	{
		if ((((double)ki*_e/250)+servo_pid.servo_pos_i)>SERVO_MAX_FORCE) servo_pid.servo_pos_i=KI_POS_MIN;
		else servo_pid.servo_pos_i+=(double)ki*_e/250;
 292:	f0 2d       	mov	r31, r0
 294:	f5 01       	movw	r30, r10
 296:	20 81       	ld	r18, Z
 298:	31 81       	ldd	r19, Z+1	; 0x01
 29a:	42 81       	ldd	r20, Z+2	; 0x02
 29c:	53 81       	ldd	r21, Z+3	; 0x03
 29e:	c7 01       	movw	r24, r14
 2a0:	b6 01       	movw	r22, r12
 2a2:	0e 94 a5 05 	call	0xb4a	; 0xb4a <__addsf3>
 2a6:	f5 01       	movw	r30, r10
 2a8:	60 83       	st	Z, r22
 2aa:	71 83       	std	Z+1, r23	; 0x01
 2ac:	82 83       	std	Z+2, r24	; 0x02
 2ae:	93 83       	std	Z+3, r25	; 0x03
		ki_part= servo_pid.servo_pos_i;
 2b0:	c0 90 00 01 	lds	r12, 0x0100
 2b4:	d0 90 01 01 	lds	r13, 0x0101
 2b8:	e0 90 02 01 	lds	r14, 0x0102
 2bc:	f0 90 03 01 	lds	r15, 0x0103
	}
	
	if ((kp_part+ki_part+kd_part)>SERVO_MAX_FORCE) pid=SERVO_MAX_FORCE;
 2c0:	b8 01       	movw	r22, r16
 2c2:	80 e0       	ldi	r24, 0x00	; 0
 2c4:	90 e0       	ldi	r25, 0x00	; 0
 2c6:	0e 94 9d 06 	call	0xd3a	; 0xd3a <__floatunsisf>
 2ca:	a7 01       	movw	r20, r14
 2cc:	96 01       	movw	r18, r12
 2ce:	0e 94 a5 05 	call	0xb4a	; 0xb4a <__addsf3>
 2d2:	6b 01       	movw	r12, r22
 2d4:	7c 01       	movw	r14, r24
 2d6:	be 01       	movw	r22, r28
 2d8:	80 e0       	ldi	r24, 0x00	; 0
 2da:	90 e0       	ldi	r25, 0x00	; 0
 2dc:	0e 94 9d 06 	call	0xd3a	; 0xd3a <__floatunsisf>
 2e0:	9b 01       	movw	r18, r22
 2e2:	ac 01       	movw	r20, r24
 2e4:	c7 01       	movw	r24, r14
 2e6:	b6 01       	movw	r22, r12
 2e8:	0e 94 a5 05 	call	0xb4a	; 0xb4a <__addsf3>
 2ec:	6b 01       	movw	r12, r22
 2ee:	7c 01       	movw	r14, r24
 2f0:	20 e0       	ldi	r18, 0x00	; 0
 2f2:	30 ec       	ldi	r19, 0xC0	; 192
 2f4:	4f e7       	ldi	r20, 0x7F	; 127
 2f6:	54 e4       	ldi	r21, 0x44	; 68
 2f8:	0e 94 2b 07 	call	0xe56	; 0xe56 <__gesf2>
 2fc:	18 16       	cp	r1, r24
 2fe:	34 f0       	brlt	.+12     	; 0x30c <SERVO_POS_PID+0x1de>
	else pid =kp_part+ki_part+kd_part;
 300:	c7 01       	movw	r24, r14
 302:	b6 01       	movw	r22, r12
 304:	0e 94 71 06 	call	0xce2	; 0xce2 <__fixunssfsi>
 308:	ab 01       	movw	r20, r22
 30a:	02 c0       	rjmp	.+4      	; 0x310 <SERVO_POS_PID+0x1e2>
		if ((((double)ki*_e/250)+servo_pid.servo_pos_i)>SERVO_MAX_FORCE) servo_pid.servo_pos_i=KI_POS_MIN;
		else servo_pid.servo_pos_i+=(double)ki*_e/250;
		ki_part= servo_pid.servo_pos_i;
	}
	
	if ((kp_part+ki_part+kd_part)>SERVO_MAX_FORCE) pid=SERVO_MAX_FORCE;
 30c:	4f ef       	ldi	r20, 0xFF	; 255
 30e:	53 e0       	ldi	r21, 0x03	; 3
	else pid =kp_part+ki_part+kd_part;
	
	if (servo_ctr.servo_position>servo_input.servo_input_pos)
 310:	00 91 20 01 	lds	r16, 0x0120
 314:	10 91 21 01 	lds	r17, 0x0121
 318:	20 91 22 01 	lds	r18, 0x0122
 31c:	30 91 23 01 	lds	r19, 0x0123
 320:	80 91 09 01 	lds	r24, 0x0109
 324:	90 91 0a 01 	lds	r25, 0x010A
 328:	a0 91 0b 01 	lds	r26, 0x010B
 32c:	b0 91 0c 01 	lds	r27, 0x010C
 330:	80 17       	cp	r24, r16
 332:	91 07       	cpc	r25, r17
 334:	a2 07       	cpc	r26, r18
 336:	b3 07       	cpc	r27, r19
 338:	38 f4       	brcc	.+14     	; 0x348 <SERVO_POS_PID+0x21a>
	{
		SERVO_FORCE(pid);
 33a:	ca 01       	movw	r24, r20
 33c:	0e 94 8a 00 	call	0x114	; 0x114 <SERVO_FORCE>
		SERVO_DIR(TURN_LEFT);
 340:	80 e0       	ldi	r24, 0x00	; 0
 342:	0e 94 84 00 	call	0x108	; 0x108 <SERVO_DIR>
 346:	2c c0       	rjmp	.+88     	; 0x3a0 <SERVO_POS_PID+0x272>
	}
	
	else if (servo_ctr.servo_position<servo_input.servo_input_pos)
 348:	00 91 20 01 	lds	r16, 0x0120
 34c:	10 91 21 01 	lds	r17, 0x0121
 350:	20 91 22 01 	lds	r18, 0x0122
 354:	30 91 23 01 	lds	r19, 0x0123
 358:	80 91 09 01 	lds	r24, 0x0109
 35c:	90 91 0a 01 	lds	r25, 0x010A
 360:	a0 91 0b 01 	lds	r26, 0x010B
 364:	b0 91 0c 01 	lds	r27, 0x010C
 368:	08 17       	cp	r16, r24
 36a:	19 07       	cpc	r17, r25
 36c:	2a 07       	cpc	r18, r26
 36e:	3b 07       	cpc	r19, r27
 370:	38 f4       	brcc	.+14     	; 0x380 <SERVO_POS_PID+0x252>
	{
		SERVO_FORCE(pid);
 372:	ca 01       	movw	r24, r20
 374:	0e 94 8a 00 	call	0x114	; 0x114 <SERVO_FORCE>
		SERVO_DIR(TURN_RIGHT);
 378:	81 e0       	ldi	r24, 0x01	; 1
 37a:	0e 94 84 00 	call	0x108	; 0x108 <SERVO_DIR>
 37e:	10 c0       	rjmp	.+32     	; 0x3a0 <SERVO_POS_PID+0x272>
	}
	
	else 
	{
		servo_pid.servo_pos_i=KI_POS_MIN;
 380:	80 e0       	ldi	r24, 0x00	; 0
 382:	90 e0       	ldi	r25, 0x00	; 0
 384:	a8 e4       	ldi	r26, 0x48	; 72
 386:	b2 e4       	ldi	r27, 0x42	; 66
 388:	80 93 00 01 	sts	0x0100, r24
 38c:	90 93 01 01 	sts	0x0101, r25
 390:	a0 93 02 01 	sts	0x0102, r26
 394:	b0 93 03 01 	sts	0x0103, r27
		SERVO_FORCE(0);
 398:	80 e0       	ldi	r24, 0x00	; 0
 39a:	90 e0       	ldi	r25, 0x00	; 0
 39c:	0e 94 8a 00 	call	0x114	; 0x114 <SERVO_FORCE>
	}
	
}
 3a0:	df 91       	pop	r29
 3a2:	cf 91       	pop	r28
 3a4:	1f 91       	pop	r17
 3a6:	0f 91       	pop	r16
 3a8:	ff 90       	pop	r15
 3aa:	ef 90       	pop	r14
 3ac:	df 90       	pop	r13
 3ae:	cf 90       	pop	r12
 3b0:	bf 90       	pop	r11
 3b2:	af 90       	pop	r10
 3b4:	7f 90       	pop	r7
 3b6:	6f 90       	pop	r6
 3b8:	5f 90       	pop	r5
 3ba:	4f 90       	pop	r4
 3bc:	08 95       	ret

000003be <SERVO_DC_initial>:


void SERVO_DC_initial()
{
	// encoder input config
	PH1_DDR &= ~(1<<PH1_PIN);
 3be:	3c 98       	cbi	0x07, 4	; 7
	PH2_DDR &= ~(1<<PH2_PIN);
 3c0:	3d 98       	cbi	0x07, 5	; 7
	PH1_POR |= (1<<PH1_PIN);
 3c2:	44 9a       	sbi	0x08, 4	; 8
	PH2_POR |= (1<<PH2_PIN);
 3c4:	45 9a       	sbi	0x08, 5	; 8
	PCICR |= 1<<PCIE1;	// PCINT1 select
 3c6:	e8 e6       	ldi	r30, 0x68	; 104
 3c8:	f0 e0       	ldi	r31, 0x00	; 0
 3ca:	80 81       	ld	r24, Z
 3cc:	82 60       	ori	r24, 0x02	; 2
 3ce:	80 83       	st	Z, r24
	PCMSK1 |= (1<<PCINT13)|(1<<PCINT12);
 3d0:	ec e6       	ldi	r30, 0x6C	; 108
 3d2:	f0 e0       	ldi	r31, 0x00	; 0
 3d4:	80 81       	ld	r24, Z
 3d6:	80 63       	ori	r24, 0x30	; 48
 3d8:	80 83       	st	Z, r24
	
	//dir control ouput config
	DIR_DDR |= 1<<DIR_PIN;
 3da:	24 9a       	sbi	0x04, 4	; 4
	DIR_POR|=1<<DIR_PIN;
 3dc:	2c 9a       	sbi	0x05, 4	; 5
	//pwm control ouput config
	pwm_phasecorrect_timer1_option_initial(clk_timer1_div8,pwm_10bits);
 3de:	63 e0       	ldi	r22, 0x03	; 3
 3e0:	82 e0       	ldi	r24, 0x02	; 2
 3e2:	0e 94 fd 04 	call	0x9fa	; 0x9fa <pwm_phasecorrect_timer1_option_initial>
	//Sampling PID
		TCCR2A = (1 << WGM21);                      // Set the Timer Mode to CTC
 3e6:	82 e0       	ldi	r24, 0x02	; 2
 3e8:	80 93 b0 00 	sts	0x00B0, r24
		OCR2A = 249;                                 // Set 249 as value to count to //f=250 c=4ms
 3ec:	89 ef       	ldi	r24, 0xF9	; 249
 3ee:	80 93 b3 00 	sts	0x00B3, r24
		TIMSK2 |= (1 << OCIE0A);                     //Set the ISR COMPA vector
 3f2:	e0 e7       	ldi	r30, 0x70	; 112
 3f4:	f0 e0       	ldi	r31, 0x00	; 0
 3f6:	80 81       	ld	r24, Z
 3f8:	82 60       	ori	r24, 0x02	; 2
 3fa:	80 83       	st	Z, r24
		TCCR2B |= (1 << CS20) | (1 << CS22) ;        // set pre-scaler to 128 and start the timer
 3fc:	e1 eb       	ldi	r30, 0xB1	; 177
 3fe:	f0 e0       	ldi	r31, 0x00	; 0
 400:	80 81       	ld	r24, Z
 402:	85 60       	ori	r24, 0x05	; 5
 404:	80 83       	st	Z, r24
		
		//display initial
		SEG7_initial();
 406:	0e 94 3a 03 	call	0x674	; 0x674 <SEG7_initial>
		SEG7_disp_uint(0,0);
 40a:	60 e0       	ldi	r22, 0x00	; 0
 40c:	70 e0       	ldi	r23, 0x00	; 0
 40e:	80 e0       	ldi	r24, 0x00	; 0
 410:	90 e0       	ldi	r25, 0x00	; 0
 412:	0e 94 e8 03 	call	0x7d0	; 0x7d0 <SEG7_disp_uint>
		//servo default
		SERVO_default();
 416:	0e 94 5c 00 	call	0xb8	; 0xb8 <SERVO_default>
		SERVO_DIR(TURN_RIGHT);
 41a:	81 e0       	ldi	r24, 0x01	; 1
 41c:	0e 94 84 00 	call	0x108	; 0x108 <SERVO_DIR>
		SERVO_FORCE(500);
 420:	84 ef       	ldi	r24, 0xF4	; 244
 422:	91 e0       	ldi	r25, 0x01	; 1
 424:	0e 94 8a 00 	call	0x114	; 0x114 <SERVO_FORCE>
 428:	08 95       	ret

0000042a <__vector_7>:
	 pwm_servo_timer1_OCR1B_updata(1023-_val);
}


ISR(TIMER2_COMPA_vect)
{
 42a:	1f 92       	push	r1
 42c:	0f 92       	push	r0
 42e:	0f b6       	in	r0, 0x3f	; 63
 430:	0f 92       	push	r0
 432:	11 24       	eor	r1, r1
 434:	2f 93       	push	r18
 436:	3f 93       	push	r19
 438:	4f 93       	push	r20
 43a:	5f 93       	push	r21
 43c:	6f 93       	push	r22
 43e:	7f 93       	push	r23
 440:	8f 93       	push	r24
 442:	9f 93       	push	r25
 444:	af 93       	push	r26
 446:	bf 93       	push	r27
 448:	ef 93       	push	r30
 44a:	ff 93       	push	r31
		if (servo_ctr.servo_sample_counter==0)
 44c:	80 91 10 01 	lds	r24, 0x0110
 450:	81 11       	cpse	r24, r1
 452:	2b c0       	rjmp	.+86     	; 0x4aa <__vector_7+0x80>
		{
			servo_ctr.servo_sample_counter=servo_ctr.servo_sample_rate;
 454:	80 91 11 01 	lds	r24, 0x0111
 458:	80 93 10 01 	sts	0x0110, r24
			
			servo_ctr.servo_speed =servo_ctr.servo_speed_sample;
 45c:	a6 e1       	ldi	r26, 0x16	; 22
 45e:	b1 e0       	ldi	r27, 0x01	; 1
 460:	8d 91       	ld	r24, X+
 462:	9c 91       	ld	r25, X
 464:	11 97       	sbiw	r26, 0x01	; 1
 466:	ea e1       	ldi	r30, 0x1A	; 26
 468:	f1 e0       	ldi	r31, 0x01	; 1
 46a:	91 83       	std	Z+1, r25	; 0x01
 46c:	80 83       	st	Z, r24
			servo_ctr.servo_speed_sample=0;
 46e:	11 96       	adiw	r26, 0x01	; 1
 470:	1c 92       	st	X, r1
 472:	1e 92       	st	-X, r1
			servo_ctr.servo_accelerator = servo_ctr.servo_speed -servo_ctr.servo_pre_speed;
 474:	80 81       	ld	r24, Z
 476:	91 81       	ldd	r25, Z+1	; 0x01
 478:	a8 e1       	ldi	r26, 0x18	; 24
 47a:	b1 e0       	ldi	r27, 0x01	; 1
 47c:	2d 91       	ld	r18, X+
 47e:	3c 91       	ld	r19, X
 480:	11 97       	sbiw	r26, 0x01	; 1
 482:	82 1b       	sub	r24, r18
 484:	93 0b       	sbc	r25, r19
 486:	90 93 15 01 	sts	0x0115, r25
 48a:	80 93 14 01 	sts	0x0114, r24
			servo_ctr.servo_pre_speed = servo_ctr.servo_speed;
 48e:	80 81       	ld	r24, Z
 490:	91 81       	ldd	r25, Z+1	; 0x01
 492:	11 96       	adiw	r26, 0x01	; 1
 494:	9c 93       	st	X, r25
 496:	8e 93       	st	-X, r24
			////////////////////////////////PID CODE HERE//////////////////////////////
			
			 SERVO_POS_PID(7,3,20);
 498:	44 e1       	ldi	r20, 0x14	; 20
 49a:	50 e0       	ldi	r21, 0x00	; 0
 49c:	63 e0       	ldi	r22, 0x03	; 3
 49e:	70 e0       	ldi	r23, 0x00	; 0
 4a0:	87 e0       	ldi	r24, 0x07	; 7
 4a2:	90 e0       	ldi	r25, 0x00	; 0
 4a4:	0e 94 97 00 	call	0x12e	; 0x12e <SERVO_POS_PID>
 4a8:	05 c0       	rjmp	.+10     	; 0x4b4 <__vector_7+0x8a>
			
			//////////////////////////////////////////////////////////////////////////
			
		}
	else servo_ctr.servo_sample_counter--;
 4aa:	e0 e1       	ldi	r30, 0x10	; 16
 4ac:	f1 e0       	ldi	r31, 0x01	; 1
 4ae:	80 81       	ld	r24, Z
 4b0:	81 50       	subi	r24, 0x01	; 1
 4b2:	80 83       	st	Z, r24
}
 4b4:	ff 91       	pop	r31
 4b6:	ef 91       	pop	r30
 4b8:	bf 91       	pop	r27
 4ba:	af 91       	pop	r26
 4bc:	9f 91       	pop	r25
 4be:	8f 91       	pop	r24
 4c0:	7f 91       	pop	r23
 4c2:	6f 91       	pop	r22
 4c4:	5f 91       	pop	r21
 4c6:	4f 91       	pop	r20
 4c8:	3f 91       	pop	r19
 4ca:	2f 91       	pop	r18
 4cc:	0f 90       	pop	r0
 4ce:	0f be       	out	0x3f, r0	; 63
 4d0:	0f 90       	pop	r0
 4d2:	1f 90       	pop	r1
 4d4:	18 95       	reti

000004d6 <__vector_4>:


ISR(PCINT1_vect)
{
 4d6:	1f 92       	push	r1
 4d8:	0f 92       	push	r0
 4da:	0f b6       	in	r0, 0x3f	; 63
 4dc:	0f 92       	push	r0
 4de:	11 24       	eor	r1, r1
 4e0:	2f 93       	push	r18
 4e2:	8f 93       	push	r24
 4e4:	9f 93       	push	r25
 4e6:	af 93       	push	r26
 4e8:	bf 93       	push	r27
 4ea:	ef 93       	push	r30
 4ec:	ff 93       	push	r31
	unsigned char pre_dir_temp = 0;
	if (PH1_IN&(1<<PH1_PIN)) pre_dir_temp =1;
 4ee:	86 b1       	in	r24, 0x06	; 6
 4f0:	82 95       	swap	r24
 4f2:	81 70       	andi	r24, 0x01	; 1
	if (PH2_IN&(1<<PH2_PIN)) pre_dir_temp|=1<<1;
 4f4:	35 99       	sbic	0x06, 5	; 6
 4f6:	82 60       	ori	r24, 0x02	; 2
	switch (pre_dir_temp)
 4f8:	81 30       	cpi	r24, 0x01	; 1
 4fa:	b1 f0       	breq	.+44     	; 0x528 <__vector_4+0x52>
 4fc:	28 f0       	brcs	.+10     	; 0x508 <__vector_4+0x32>
 4fe:	82 30       	cpi	r24, 0x02	; 2
 500:	11 f1       	breq	.+68     	; 0x546 <__vector_4+0x70>
 502:	83 30       	cpi	r24, 0x03	; 3
 504:	81 f1       	breq	.+96     	; 0x566 <__vector_4+0x90>
 506:	3d c0       	rjmp	.+122    	; 0x582 <__vector_4+0xac>
	{
		case 0:
		if (servo_ctr.servo_pre_dir==1) servo_ctr.servo_dir = LEFT;
 508:	90 91 12 01 	lds	r25, 0x0112
 50c:	91 30       	cpi	r25, 0x01	; 1
 50e:	19 f4       	brne	.+6      	; 0x516 <__vector_4+0x40>
 510:	10 92 13 01 	sts	0x0113, r1
 514:	36 c0       	rjmp	.+108    	; 0x582 <__vector_4+0xac>
		else if (servo_ctr.servo_pre_dir==2) servo_ctr.servo_dir = RIGHT;
 516:	90 91 12 01 	lds	r25, 0x0112
 51a:	92 30       	cpi	r25, 0x02	; 2
 51c:	09 f0       	breq	.+2      	; 0x520 <__vector_4+0x4a>
 51e:	7f c0       	rjmp	.+254    	; 0x61e <__vector_4+0x148>
 520:	91 e0       	ldi	r25, 0x01	; 1
 522:	90 93 13 01 	sts	0x0113, r25
 526:	2d c0       	rjmp	.+90     	; 0x582 <__vector_4+0xac>
		else return;
		break;
		case 1:
		if (servo_ctr.servo_pre_dir==3) servo_ctr.servo_dir = LEFT;
 528:	90 91 12 01 	lds	r25, 0x0112
 52c:	93 30       	cpi	r25, 0x03	; 3
 52e:	19 f4       	brne	.+6      	; 0x536 <__vector_4+0x60>
 530:	10 92 13 01 	sts	0x0113, r1
 534:	26 c0       	rjmp	.+76     	; 0x582 <__vector_4+0xac>
		else if (servo_ctr.servo_pre_dir==0) servo_ctr.servo_dir = RIGHT;
 536:	90 91 12 01 	lds	r25, 0x0112
 53a:	91 11       	cpse	r25, r1
 53c:	70 c0       	rjmp	.+224    	; 0x61e <__vector_4+0x148>
 53e:	91 e0       	ldi	r25, 0x01	; 1
 540:	90 93 13 01 	sts	0x0113, r25
 544:	1e c0       	rjmp	.+60     	; 0x582 <__vector_4+0xac>
		else return;
		break;
		case 2:
		if (servo_ctr.servo_pre_dir==0) servo_ctr.servo_dir = LEFT;
 546:	90 91 12 01 	lds	r25, 0x0112
 54a:	91 11       	cpse	r25, r1
 54c:	03 c0       	rjmp	.+6      	; 0x554 <__vector_4+0x7e>
 54e:	10 92 13 01 	sts	0x0113, r1
 552:	17 c0       	rjmp	.+46     	; 0x582 <__vector_4+0xac>
		else if (servo_ctr.servo_pre_dir==3) servo_ctr.servo_dir = RIGHT;
 554:	90 91 12 01 	lds	r25, 0x0112
 558:	93 30       	cpi	r25, 0x03	; 3
 55a:	09 f0       	breq	.+2      	; 0x55e <__vector_4+0x88>
 55c:	60 c0       	rjmp	.+192    	; 0x61e <__vector_4+0x148>
 55e:	91 e0       	ldi	r25, 0x01	; 1
 560:	90 93 13 01 	sts	0x0113, r25
 564:	0e c0       	rjmp	.+28     	; 0x582 <__vector_4+0xac>
		else return;
		break;
		case 3:
		if (servo_ctr.servo_pre_dir==2) servo_ctr.servo_dir = LEFT;
 566:	90 91 12 01 	lds	r25, 0x0112
 56a:	92 30       	cpi	r25, 0x02	; 2
 56c:	19 f4       	brne	.+6      	; 0x574 <__vector_4+0x9e>
 56e:	10 92 13 01 	sts	0x0113, r1
 572:	07 c0       	rjmp	.+14     	; 0x582 <__vector_4+0xac>
		else if (servo_ctr.servo_pre_dir==1) servo_ctr.servo_dir = RIGHT;
 574:	90 91 12 01 	lds	r25, 0x0112
 578:	91 30       	cpi	r25, 0x01	; 1
 57a:	09 f0       	breq	.+2      	; 0x57e <__vector_4+0xa8>
 57c:	50 c0       	rjmp	.+160    	; 0x61e <__vector_4+0x148>
 57e:	90 93 13 01 	sts	0x0113, r25
		break;
		default:
		break;
		//return;
	}
	servo_ctr.servo_pre_dir = pre_dir_temp;
 582:	80 93 12 01 	sts	0x0112, r24
	servo_ctr.servo_speed_sample++;
 586:	e6 e1       	ldi	r30, 0x16	; 22
 588:	f1 e0       	ldi	r31, 0x01	; 1
 58a:	80 81       	ld	r24, Z
 58c:	91 81       	ldd	r25, Z+1	; 0x01
 58e:	01 96       	adiw	r24, 0x01	; 1
 590:	91 83       	std	Z+1, r25	; 0x01
 592:	80 83       	st	Z, r24
	if (servo_ctr.servo_dir)
 594:	80 91 13 01 	lds	r24, 0x0113
 598:	88 23       	and	r24, r24
 59a:	11 f1       	breq	.+68     	; 0x5e0 <__vector_4+0x10a>
	{
		if (servo_ctr.servo_position>=SERVO_MAX_POSITION)
 59c:	80 91 20 01 	lds	r24, 0x0120
 5a0:	90 91 21 01 	lds	r25, 0x0121
 5a4:	a0 91 22 01 	lds	r26, 0x0122
 5a8:	b0 91 23 01 	lds	r27, 0x0123
 5ac:	81 15       	cp	r24, r1
 5ae:	98 42       	sbci	r25, 0x28	; 40
 5b0:	ab 46       	sbci	r26, 0x6B	; 107
 5b2:	be 4e       	sbci	r27, 0xEE	; 238
 5b4:	20 f0       	brcs	.+8      	; 0x5be <__vector_4+0xe8>
		{
			servo_ctr.servo_range_check = SERVO_MAX_RANGE;
 5b6:	82 e0       	ldi	r24, 0x02	; 2
 5b8:	80 93 0f 01 	sts	0x010F, r24
			 return;
 5bc:	30 c0       	rjmp	.+96     	; 0x61e <__vector_4+0x148>
		}
		else 
		{
			servo_ctr.servo_range_check = SERVO_IN_RANGE;
 5be:	81 e0       	ldi	r24, 0x01	; 1
 5c0:	80 93 0f 01 	sts	0x010F, r24
			servo_ctr.servo_position++;
 5c4:	e0 e2       	ldi	r30, 0x20	; 32
 5c6:	f1 e0       	ldi	r31, 0x01	; 1
 5c8:	80 81       	ld	r24, Z
 5ca:	91 81       	ldd	r25, Z+1	; 0x01
 5cc:	a2 81       	ldd	r26, Z+2	; 0x02
 5ce:	b3 81       	ldd	r27, Z+3	; 0x03
 5d0:	01 96       	adiw	r24, 0x01	; 1
 5d2:	a1 1d       	adc	r26, r1
 5d4:	b1 1d       	adc	r27, r1
 5d6:	80 83       	st	Z, r24
 5d8:	91 83       	std	Z+1, r25	; 0x01
 5da:	a2 83       	std	Z+2, r26	; 0x02
 5dc:	b3 83       	std	Z+3, r27	; 0x03
 5de:	1f c0       	rjmp	.+62     	; 0x61e <__vector_4+0x148>
		}
	}
	else
	{
		if (servo_ctr.servo_position<=0) 
 5e0:	80 91 20 01 	lds	r24, 0x0120
 5e4:	90 91 21 01 	lds	r25, 0x0121
 5e8:	a0 91 22 01 	lds	r26, 0x0122
 5ec:	b0 91 23 01 	lds	r27, 0x0123
 5f0:	89 2b       	or	r24, r25
 5f2:	8a 2b       	or	r24, r26
 5f4:	8b 2b       	or	r24, r27
 5f6:	19 f4       	brne	.+6      	; 0x5fe <__vector_4+0x128>
		{
			servo_ctr.servo_range_check = SERVO_MIN_RANGE;
 5f8:	10 92 0f 01 	sts	0x010F, r1
			return;
 5fc:	10 c0       	rjmp	.+32     	; 0x61e <__vector_4+0x148>
		}
		else 
		{
			servo_ctr.servo_range_check = SERVO_IN_RANGE;
 5fe:	81 e0       	ldi	r24, 0x01	; 1
 600:	80 93 0f 01 	sts	0x010F, r24
			servo_ctr.servo_position--;
 604:	e0 e2       	ldi	r30, 0x20	; 32
 606:	f1 e0       	ldi	r31, 0x01	; 1
 608:	80 81       	ld	r24, Z
 60a:	91 81       	ldd	r25, Z+1	; 0x01
 60c:	a2 81       	ldd	r26, Z+2	; 0x02
 60e:	b3 81       	ldd	r27, Z+3	; 0x03
 610:	01 97       	sbiw	r24, 0x01	; 1
 612:	a1 09       	sbc	r26, r1
 614:	b1 09       	sbc	r27, r1
 616:	80 83       	st	Z, r24
 618:	91 83       	std	Z+1, r25	; 0x01
 61a:	a2 83       	std	Z+2, r26	; 0x02
 61c:	b3 83       	std	Z+3, r27	; 0x03
		}
	}
	
 61e:	ff 91       	pop	r31
 620:	ef 91       	pop	r30
 622:	bf 91       	pop	r27
 624:	af 91       	pop	r26
 626:	9f 91       	pop	r25
 628:	8f 91       	pop	r24
 62a:	2f 91       	pop	r18
 62c:	0f 90       	pop	r0
 62e:	0f be       	out	0x3f, r0	; 63
 630:	0f 90       	pop	r0
 632:	1f 90       	pop	r1
 634:	18 95       	reti

00000636 <hc595_set_spi>:
 636:	39 9a       	sbi	0x07, 1	; 7
 638:	38 9a       	sbi	0x07, 0	; 7
 63a:	3a 9a       	sbi	0x07, 2	; 7
 63c:	40 9a       	sbi	0x08, 0	; 8
 63e:	41 98       	cbi	0x08, 1	; 8
 640:	42 98       	cbi	0x08, 2	; 8
 642:	08 95       	ret

00000644 <hc595_byte_transmit>:
 644:	27 e0       	ldi	r18, 0x07	; 7
 646:	30 e0       	ldi	r19, 0x00	; 0
 648:	90 e0       	ldi	r25, 0x00	; 0
 64a:	ac 01       	movw	r20, r24
 64c:	02 2e       	mov	r0, r18
 64e:	02 c0       	rjmp	.+4      	; 0x654 <hc595_byte_transmit+0x10>
 650:	55 95       	asr	r21
 652:	47 95       	ror	r20
 654:	0a 94       	dec	r0
 656:	e2 f7       	brpl	.-8      	; 0x650 <hc595_byte_transmit+0xc>
 658:	40 ff       	sbrs	r20, 0
 65a:	02 c0       	rjmp	.+4      	; 0x660 <hc595_byte_transmit+0x1c>
 65c:	40 9a       	sbi	0x08, 0	; 8
 65e:	01 c0       	rjmp	.+2      	; 0x662 <hc595_byte_transmit+0x1e>
 660:	40 98       	cbi	0x08, 0	; 8
 662:	41 9a       	sbi	0x08, 1	; 8
 664:	41 98       	cbi	0x08, 1	; 8
 666:	21 50       	subi	r18, 0x01	; 1
 668:	31 09       	sbc	r19, r1
 66a:	78 f7       	brcc	.-34     	; 0x64a <hc595_byte_transmit+0x6>
 66c:	08 95       	ret

0000066e <hc595_latch>:
 66e:	42 9a       	sbi	0x08, 2	; 8
 670:	42 98       	cbi	0x08, 2	; 8
 672:	08 95       	ret

00000674 <SEG7_initial>:
 674:	82 e0       	ldi	r24, 0x02	; 2
 676:	84 bd       	out	0x24, r24	; 36
 678:	89 ef       	ldi	r24, 0xF9	; 249
 67a:	87 bd       	out	0x27, r24	; 39
 67c:	ee e6       	ldi	r30, 0x6E	; 110
 67e:	f0 e0       	ldi	r31, 0x00	; 0
 680:	80 81       	ld	r24, Z
 682:	82 60       	ori	r24, 0x02	; 2
 684:	80 83       	st	Z, r24
 686:	85 b5       	in	r24, 0x25	; 37
 688:	83 60       	ori	r24, 0x03	; 3
 68a:	85 bd       	out	0x25, r24	; 37
 68c:	0e 94 1b 03 	call	0x636	; 0x636 <hc595_set_spi>
 690:	08 95       	ret

00000692 <HEX2BCD_uint>:
 692:	cf 93       	push	r28
 694:	df 93       	push	r29
 696:	ac 01       	movw	r20, r24
 698:	fb 01       	movw	r30, r22
 69a:	80 31       	cpi	r24, 0x10	; 16
 69c:	27 e2       	ldi	r18, 0x27	; 39
 69e:	92 07       	cpc	r25, r18
 6a0:	08 f0       	brcs	.+2      	; 0x6a4 <HEX2BCD_uint+0x12>
 6a2:	8b c0       	rjmp	.+278    	; 0x7ba <HEX2BCD_uint+0x128>
 6a4:	9c 01       	movw	r18, r24
 6a6:	ad ec       	ldi	r26, 0xCD	; 205
 6a8:	bc ec       	ldi	r27, 0xCC	; 204
 6aa:	0e 94 bc 07 	call	0xf78	; 0xf78 <__umulhisi3>
 6ae:	ec 01       	movw	r28, r24
 6b0:	d6 95       	lsr	r29
 6b2:	c7 95       	ror	r28
 6b4:	d6 95       	lsr	r29
 6b6:	c7 95       	ror	r28
 6b8:	d6 95       	lsr	r29
 6ba:	c7 95       	ror	r28
 6bc:	9e 01       	movw	r18, r28
 6be:	22 0f       	add	r18, r18
 6c0:	33 1f       	adc	r19, r19
 6c2:	ce 01       	movw	r24, r28
 6c4:	88 0f       	add	r24, r24
 6c6:	99 1f       	adc	r25, r25
 6c8:	88 0f       	add	r24, r24
 6ca:	99 1f       	adc	r25, r25
 6cc:	88 0f       	add	r24, r24
 6ce:	99 1f       	adc	r25, r25
 6d0:	82 0f       	add	r24, r18
 6d2:	93 1f       	adc	r25, r19
 6d4:	9a 01       	movw	r18, r20
 6d6:	28 1b       	sub	r18, r24
 6d8:	39 0b       	sbc	r19, r25
 6da:	23 83       	std	Z+3, r18	; 0x03
 6dc:	9e 01       	movw	r18, r28
 6de:	0e 94 bc 07 	call	0xf78	; 0xf78 <__umulhisi3>
 6e2:	96 95       	lsr	r25
 6e4:	87 95       	ror	r24
 6e6:	96 95       	lsr	r25
 6e8:	87 95       	ror	r24
 6ea:	96 95       	lsr	r25
 6ec:	87 95       	ror	r24
 6ee:	9c 01       	movw	r18, r24
 6f0:	22 0f       	add	r18, r18
 6f2:	33 1f       	adc	r19, r19
 6f4:	88 0f       	add	r24, r24
 6f6:	99 1f       	adc	r25, r25
 6f8:	88 0f       	add	r24, r24
 6fa:	99 1f       	adc	r25, r25
 6fc:	88 0f       	add	r24, r24
 6fe:	99 1f       	adc	r25, r25
 700:	82 0f       	add	r24, r18
 702:	93 1f       	adc	r25, r19
 704:	c8 1b       	sub	r28, r24
 706:	d9 0b       	sbc	r29, r25
 708:	c2 83       	std	Z+2, r28	; 0x02
 70a:	9a 01       	movw	r18, r20
 70c:	36 95       	lsr	r19
 70e:	27 95       	ror	r18
 710:	36 95       	lsr	r19
 712:	27 95       	ror	r18
 714:	ab e7       	ldi	r26, 0x7B	; 123
 716:	b4 e1       	ldi	r27, 0x14	; 20
 718:	0e 94 bc 07 	call	0xf78	; 0xf78 <__umulhisi3>
 71c:	ec 01       	movw	r28, r24
 71e:	d6 95       	lsr	r29
 720:	c7 95       	ror	r28
 722:	9e 01       	movw	r18, r28
 724:	ad ec       	ldi	r26, 0xCD	; 205
 726:	bc ec       	ldi	r27, 0xCC	; 204
 728:	0e 94 bc 07 	call	0xf78	; 0xf78 <__umulhisi3>
 72c:	96 95       	lsr	r25
 72e:	87 95       	ror	r24
 730:	96 95       	lsr	r25
 732:	87 95       	ror	r24
 734:	96 95       	lsr	r25
 736:	87 95       	ror	r24
 738:	9c 01       	movw	r18, r24
 73a:	22 0f       	add	r18, r18
 73c:	33 1f       	adc	r19, r19
 73e:	88 0f       	add	r24, r24
 740:	99 1f       	adc	r25, r25
 742:	88 0f       	add	r24, r24
 744:	99 1f       	adc	r25, r25
 746:	88 0f       	add	r24, r24
 748:	99 1f       	adc	r25, r25
 74a:	82 0f       	add	r24, r18
 74c:	93 1f       	adc	r25, r19
 74e:	c8 1b       	sub	r28, r24
 750:	d9 0b       	sbc	r29, r25
 752:	c1 83       	std	Z+1, r28	; 0x01
 754:	9a 01       	movw	r18, r20
 756:	36 95       	lsr	r19
 758:	27 95       	ror	r18
 75a:	36 95       	lsr	r19
 75c:	27 95       	ror	r18
 75e:	36 95       	lsr	r19
 760:	27 95       	ror	r18
 762:	a5 ec       	ldi	r26, 0xC5	; 197
 764:	b0 e2       	ldi	r27, 0x20	; 32
 766:	0e 94 bc 07 	call	0xf78	; 0xf78 <__umulhisi3>
 76a:	ac 01       	movw	r20, r24
 76c:	52 95       	swap	r21
 76e:	42 95       	swap	r20
 770:	4f 70       	andi	r20, 0x0F	; 15
 772:	45 27       	eor	r20, r21
 774:	5f 70       	andi	r21, 0x0F	; 15
 776:	45 27       	eor	r20, r21
 778:	9a 01       	movw	r18, r20
 77a:	ad ec       	ldi	r26, 0xCD	; 205
 77c:	bc ec       	ldi	r27, 0xCC	; 204
 77e:	0e 94 bc 07 	call	0xf78	; 0xf78 <__umulhisi3>
 782:	96 95       	lsr	r25
 784:	87 95       	ror	r24
 786:	96 95       	lsr	r25
 788:	87 95       	ror	r24
 78a:	96 95       	lsr	r25
 78c:	87 95       	ror	r24
 78e:	9c 01       	movw	r18, r24
 790:	22 0f       	add	r18, r18
 792:	33 1f       	adc	r19, r19
 794:	88 0f       	add	r24, r24
 796:	99 1f       	adc	r25, r25
 798:	88 0f       	add	r24, r24
 79a:	99 1f       	adc	r25, r25
 79c:	88 0f       	add	r24, r24
 79e:	99 1f       	adc	r25, r25
 7a0:	82 0f       	add	r24, r18
 7a2:	93 1f       	adc	r25, r19
 7a4:	48 1b       	sub	r20, r24
 7a6:	59 0b       	sbc	r21, r25
 7a8:	40 83       	st	Z, r20
 7aa:	07 c0       	rjmp	.+14     	; 0x7ba <HEX2BCD_uint+0x128>
 7ac:	90 81       	ld	r25, Z
 7ae:	91 11       	cpse	r25, r1
 7b0:	0c c0       	rjmp	.+24     	; 0x7ca <HEX2BCD_uint+0x138>
 7b2:	21 93       	st	Z+, r18
 7b4:	81 50       	subi	r24, 0x01	; 1
 7b6:	d1 f7       	brne	.-12     	; 0x7ac <HEX2BCD_uint+0x11a>
 7b8:	08 c0       	rjmp	.+16     	; 0x7ca <HEX2BCD_uint+0x138>
 7ba:	80 81       	ld	r24, Z
 7bc:	81 11       	cpse	r24, r1
 7be:	05 c0       	rjmp	.+10     	; 0x7ca <HEX2BCD_uint+0x138>
 7c0:	8a e0       	ldi	r24, 0x0A	; 10
 7c2:	81 93       	st	Z+, r24
 7c4:	83 e0       	ldi	r24, 0x03	; 3
 7c6:	2a e0       	ldi	r18, 0x0A	; 10
 7c8:	f1 cf       	rjmp	.-30     	; 0x7ac <HEX2BCD_uint+0x11a>
 7ca:	df 91       	pop	r29
 7cc:	cf 91       	pop	r28
 7ce:	08 95       	ret

000007d0 <SEG7_disp_uint>:
 7d0:	0f 93       	push	r16
 7d2:	1f 93       	push	r17
 7d4:	cf 93       	push	r28
 7d6:	df 93       	push	r29
 7d8:	00 d0       	rcall	.+0      	; 0x7da <SEG7_disp_uint+0xa>
 7da:	00 d0       	rcall	.+0      	; 0x7dc <SEG7_disp_uint+0xc>
 7dc:	cd b7       	in	r28, 0x3d	; 61
 7de:	de b7       	in	r29, 0x3e	; 62
 7e0:	8b 01       	movw	r16, r22
 7e2:	80 31       	cpi	r24, 0x10	; 16
 7e4:	27 e2       	ldi	r18, 0x27	; 39
 7e6:	92 07       	cpc	r25, r18
 7e8:	08 f5       	brcc	.+66     	; 0x82c <SEG7_disp_uint+0x5c>
 7ea:	be 01       	movw	r22, r28
 7ec:	6f 5f       	subi	r22, 0xFF	; 255
 7ee:	7f 4f       	sbci	r23, 0xFF	; 255
 7f0:	0e 94 49 03 	call	0x692	; 0x692 <HEX2BCD_uint>
 7f4:	e9 81       	ldd	r30, Y+1	; 0x01
 7f6:	f0 e0       	ldi	r31, 0x00	; 0
 7f8:	e4 58       	subi	r30, 0x84	; 132
 7fa:	ff 4f       	sbci	r31, 0xFF	; 255
 7fc:	e4 91       	lpm	r30, Z
 7fe:	e0 93 24 01 	sts	0x0124, r30
 802:	ea 81       	ldd	r30, Y+2	; 0x02
 804:	f0 e0       	ldi	r31, 0x00	; 0
 806:	e4 58       	subi	r30, 0x84	; 132
 808:	ff 4f       	sbci	r31, 0xFF	; 255
 80a:	e4 91       	lpm	r30, Z
 80c:	e0 93 25 01 	sts	0x0125, r30
 810:	eb 81       	ldd	r30, Y+3	; 0x03
 812:	f0 e0       	ldi	r31, 0x00	; 0
 814:	e4 58       	subi	r30, 0x84	; 132
 816:	ff 4f       	sbci	r31, 0xFF	; 255
 818:	e4 91       	lpm	r30, Z
 81a:	e0 93 26 01 	sts	0x0126, r30
 81e:	ec 81       	ldd	r30, Y+4	; 0x04
 820:	f0 e0       	ldi	r31, 0x00	; 0
 822:	e4 58       	subi	r30, 0x84	; 132
 824:	ff 4f       	sbci	r31, 0xFF	; 255
 826:	e4 91       	lpm	r30, Z
 828:	e0 93 27 01 	sts	0x0127, r30
 82c:	00 31       	cpi	r16, 0x10	; 16
 82e:	87 e2       	ldi	r24, 0x27	; 39
 830:	18 07       	cpc	r17, r24
 832:	10 f5       	brcc	.+68     	; 0x878 <SEG7_disp_uint+0xa8>
 834:	be 01       	movw	r22, r28
 836:	6f 5f       	subi	r22, 0xFF	; 255
 838:	7f 4f       	sbci	r23, 0xFF	; 255
 83a:	c8 01       	movw	r24, r16
 83c:	0e 94 49 03 	call	0x692	; 0x692 <HEX2BCD_uint>
 840:	e9 81       	ldd	r30, Y+1	; 0x01
 842:	f0 e0       	ldi	r31, 0x00	; 0
 844:	e4 58       	subi	r30, 0x84	; 132
 846:	ff 4f       	sbci	r31, 0xFF	; 255
 848:	e4 91       	lpm	r30, Z
 84a:	e0 93 28 01 	sts	0x0128, r30
 84e:	ea 81       	ldd	r30, Y+2	; 0x02
 850:	f0 e0       	ldi	r31, 0x00	; 0
 852:	e4 58       	subi	r30, 0x84	; 132
 854:	ff 4f       	sbci	r31, 0xFF	; 255
 856:	e4 91       	lpm	r30, Z
 858:	e0 93 29 01 	sts	0x0129, r30
 85c:	eb 81       	ldd	r30, Y+3	; 0x03
 85e:	f0 e0       	ldi	r31, 0x00	; 0
 860:	e4 58       	subi	r30, 0x84	; 132
 862:	ff 4f       	sbci	r31, 0xFF	; 255
 864:	e4 91       	lpm	r30, Z
 866:	e0 93 2a 01 	sts	0x012A, r30
 86a:	ec 81       	ldd	r30, Y+4	; 0x04
 86c:	f0 e0       	ldi	r31, 0x00	; 0
 86e:	e4 58       	subi	r30, 0x84	; 132
 870:	ff 4f       	sbci	r31, 0xFF	; 255
 872:	e4 91       	lpm	r30, Z
 874:	e0 93 2b 01 	sts	0x012B, r30
 878:	0f 90       	pop	r0
 87a:	0f 90       	pop	r0
 87c:	0f 90       	pop	r0
 87e:	0f 90       	pop	r0
 880:	df 91       	pop	r29
 882:	cf 91       	pop	r28
 884:	1f 91       	pop	r17
 886:	0f 91       	pop	r16
 888:	08 95       	ret

0000088a <SEG7_send>:
 88a:	1f 93       	push	r17
 88c:	cf 93       	push	r28
 88e:	df 93       	push	r29
 890:	16 2f       	mov	r17, r22
 892:	c1 e0       	ldi	r28, 0x01	; 1
 894:	d0 e0       	ldi	r29, 0x00	; 0
 896:	9e 01       	movw	r18, r28
 898:	02 c0       	rjmp	.+4      	; 0x89e <SEG7_send+0x14>
 89a:	22 0f       	add	r18, r18
 89c:	33 1f       	adc	r19, r19
 89e:	8a 95       	dec	r24
 8a0:	e2 f7       	brpl	.-8      	; 0x89a <SEG7_send+0x10>
 8a2:	e9 01       	movw	r28, r18
 8a4:	c0 95       	com	r28
 8a6:	d0 95       	com	r29
 8a8:	8d 2f       	mov	r24, r29
 8aa:	0e 94 22 03 	call	0x644	; 0x644 <hc595_byte_transmit>
 8ae:	8c 2f       	mov	r24, r28
 8b0:	0e 94 22 03 	call	0x644	; 0x644 <hc595_byte_transmit>
 8b4:	81 2f       	mov	r24, r17
 8b6:	0e 94 22 03 	call	0x644	; 0x644 <hc595_byte_transmit>
 8ba:	0e 94 37 03 	call	0x66e	; 0x66e <hc595_latch>
 8be:	df 91       	pop	r29
 8c0:	cf 91       	pop	r28
 8c2:	1f 91       	pop	r17
 8c4:	08 95       	ret

000008c6 <SEG7_scan>:
 8c6:	80 91 2e 01 	lds	r24, 0x012E
 8ca:	90 e0       	ldi	r25, 0x00	; 0
 8cc:	8a 30       	cpi	r24, 0x0A	; 10
 8ce:	91 05       	cpc	r25, r1
 8d0:	08 f0       	brcs	.+2      	; 0x8d4 <SEG7_scan+0xe>
 8d2:	68 c0       	rjmp	.+208    	; 0x9a4 <__stack+0xa5>
 8d4:	fc 01       	movw	r30, r24
 8d6:	ec 5c       	subi	r30, 0xCC	; 204
 8d8:	ff 4f       	sbci	r31, 0xFF	; 255
 8da:	0c 94 b6 07 	jmp	0xf6c	; 0xf6c <__tablejump2__>
 8de:	60 91 25 01 	lds	r22, 0x0125
 8e2:	70 e0       	ldi	r23, 0x00	; 0
 8e4:	80 e0       	ldi	r24, 0x00	; 0
 8e6:	0e 94 45 04 	call	0x88a	; 0x88a <SEG7_send>
 8ea:	81 e0       	ldi	r24, 0x01	; 1
 8ec:	80 93 2e 01 	sts	0x012E, r24
 8f0:	08 95       	ret
 8f2:	60 91 26 01 	lds	r22, 0x0126
 8f6:	70 e0       	ldi	r23, 0x00	; 0
 8f8:	81 e0       	ldi	r24, 0x01	; 1
 8fa:	0e 94 45 04 	call	0x88a	; 0x88a <SEG7_send>
 8fe:	82 e0       	ldi	r24, 0x02	; 2
 900:	80 93 2e 01 	sts	0x012E, r24
 904:	08 95       	ret
 906:	60 91 27 01 	lds	r22, 0x0127
 90a:	70 e0       	ldi	r23, 0x00	; 0
 90c:	82 e0       	ldi	r24, 0x02	; 2
 90e:	0e 94 45 04 	call	0x88a	; 0x88a <SEG7_send>
 912:	83 e0       	ldi	r24, 0x03	; 3
 914:	80 93 2e 01 	sts	0x012E, r24
 918:	08 95       	ret
 91a:	60 91 29 01 	lds	r22, 0x0129
 91e:	70 e0       	ldi	r23, 0x00	; 0
 920:	83 e0       	ldi	r24, 0x03	; 3
 922:	0e 94 45 04 	call	0x88a	; 0x88a <SEG7_send>
 926:	84 e0       	ldi	r24, 0x04	; 4
 928:	80 93 2e 01 	sts	0x012E, r24
 92c:	08 95       	ret
 92e:	60 91 2a 01 	lds	r22, 0x012A
 932:	70 e0       	ldi	r23, 0x00	; 0
 934:	84 e0       	ldi	r24, 0x04	; 4
 936:	0e 94 45 04 	call	0x88a	; 0x88a <SEG7_send>
 93a:	85 e0       	ldi	r24, 0x05	; 5
 93c:	80 93 2e 01 	sts	0x012E, r24
 940:	08 95       	ret
 942:	60 91 2b 01 	lds	r22, 0x012B
 946:	70 e0       	ldi	r23, 0x00	; 0
 948:	85 e0       	ldi	r24, 0x05	; 5
 94a:	0e 94 45 04 	call	0x88a	; 0x88a <SEG7_send>
 94e:	86 e0       	ldi	r24, 0x06	; 6
 950:	80 93 2e 01 	sts	0x012E, r24
 954:	08 95       	ret
 956:	60 91 24 01 	lds	r22, 0x0124
 95a:	70 e0       	ldi	r23, 0x00	; 0
 95c:	86 e0       	ldi	r24, 0x06	; 6
 95e:	0e 94 45 04 	call	0x88a	; 0x88a <SEG7_send>
 962:	87 e0       	ldi	r24, 0x07	; 7
 964:	80 93 2e 01 	sts	0x012E, r24
 968:	08 95       	ret
 96a:	60 91 28 01 	lds	r22, 0x0128
 96e:	70 e0       	ldi	r23, 0x00	; 0
 970:	87 e0       	ldi	r24, 0x07	; 7
 972:	0e 94 45 04 	call	0x88a	; 0x88a <SEG7_send>
 976:	88 e0       	ldi	r24, 0x08	; 8
 978:	80 93 2e 01 	sts	0x012E, r24
 97c:	08 95       	ret
 97e:	60 91 2c 01 	lds	r22, 0x012C
 982:	70 e0       	ldi	r23, 0x00	; 0
 984:	88 e0       	ldi	r24, 0x08	; 8
 986:	0e 94 45 04 	call	0x88a	; 0x88a <SEG7_send>
 98a:	89 e0       	ldi	r24, 0x09	; 9
 98c:	80 93 2e 01 	sts	0x012E, r24
 990:	08 95       	ret
 992:	60 91 2d 01 	lds	r22, 0x012D
 996:	70 e0       	ldi	r23, 0x00	; 0
 998:	89 e0       	ldi	r24, 0x09	; 9
 99a:	0e 94 45 04 	call	0x88a	; 0x88a <SEG7_send>
 99e:	10 92 2e 01 	sts	0x012E, r1
 9a2:	08 95       	ret
 9a4:	10 92 2e 01 	sts	0x012E, r1
 9a8:	08 95       	ret

000009aa <__vector_14>:
 9aa:	1f 92       	push	r1
 9ac:	0f 92       	push	r0
 9ae:	0f b6       	in	r0, 0x3f	; 63
 9b0:	0f 92       	push	r0
 9b2:	11 24       	eor	r1, r1
 9b4:	2f 93       	push	r18
 9b6:	3f 93       	push	r19
 9b8:	4f 93       	push	r20
 9ba:	5f 93       	push	r21
 9bc:	6f 93       	push	r22
 9be:	7f 93       	push	r23
 9c0:	8f 93       	push	r24
 9c2:	9f 93       	push	r25
 9c4:	af 93       	push	r26
 9c6:	bf 93       	push	r27
 9c8:	ef 93       	push	r30
 9ca:	ff 93       	push	r31
 9cc:	0e 94 63 04 	call	0x8c6	; 0x8c6 <SEG7_scan>
 9d0:	ff 91       	pop	r31
 9d2:	ef 91       	pop	r30
 9d4:	bf 91       	pop	r27
 9d6:	af 91       	pop	r26
 9d8:	9f 91       	pop	r25
 9da:	8f 91       	pop	r24
 9dc:	7f 91       	pop	r23
 9de:	6f 91       	pop	r22
 9e0:	5f 91       	pop	r21
 9e2:	4f 91       	pop	r20
 9e4:	3f 91       	pop	r19
 9e6:	2f 91       	pop	r18
 9e8:	0f 90       	pop	r0
 9ea:	0f be       	out	0x3f, r0	; 63
 9ec:	0f 90       	pop	r0
 9ee:	1f 90       	pop	r1
 9f0:	18 95       	reti

000009f2 <main>:
#include "disp/xiudun2008V.h"
#include <avr/io.h>

int main(void)
{
	SERVO_DC_initial();
 9f2:	0e 94 df 01 	call	0x3be	; 0x3be <SERVO_DC_initial>

	sei();
 9f6:	78 94       	sei
 9f8:	ff cf       	rjmp	.-2      	; 0x9f8 <main+0x6>

000009fa <pwm_phasecorrect_timer1_option_initial>:
 9fa:	94 b1       	in	r25, 0x04	; 4
 9fc:	96 60       	ori	r25, 0x06	; 6
 9fe:	94 b9       	out	0x04, r25	; 4
 a00:	60 6a       	ori	r22, 0xA0	; 160
 a02:	60 93 80 00 	sts	0x0080, r22
 a06:	80 93 81 00 	sts	0x0081, r24
 a0a:	10 92 85 00 	sts	0x0085, r1
 a0e:	10 92 84 00 	sts	0x0084, r1
 a12:	10 92 89 00 	sts	0x0089, r1
 a16:	10 92 88 00 	sts	0x0088, r1
 a1a:	10 92 8b 00 	sts	0x008B, r1
 a1e:	10 92 8a 00 	sts	0x008A, r1
 a22:	08 95       	ret

00000a24 <pwm_servo_timer1_OCR1B_updata>:
 a24:	90 93 8b 00 	sts	0x008B, r25
 a28:	80 93 8a 00 	sts	0x008A, r24
 a2c:	08 95       	ret

00000a2e <RF_decode_stop>:
 a2e:	e8 e6       	ldi	r30, 0x68	; 104
 a30:	f0 e0       	ldi	r31, 0x00	; 0
 a32:	80 81       	ld	r24, Z
 a34:	8e 7f       	andi	r24, 0xFE	; 254
 a36:	80 83       	st	Z, r24
 a38:	81 e0       	ldi	r24, 0x01	; 1
 a3a:	80 93 32 01 	sts	0x0132, r24
 a3e:	08 95       	ret

00000a40 <__vector_3>:
 a40:	1f 92       	push	r1
 a42:	0f 92       	push	r0
 a44:	0f b6       	in	r0, 0x3f	; 63
 a46:	0f 92       	push	r0
 a48:	11 24       	eor	r1, r1
 a4a:	2f 93       	push	r18
 a4c:	3f 93       	push	r19
 a4e:	4f 93       	push	r20
 a50:	5f 93       	push	r21
 a52:	6f 93       	push	r22
 a54:	7f 93       	push	r23
 a56:	8f 93       	push	r24
 a58:	9f 93       	push	r25
 a5a:	af 93       	push	r26
 a5c:	bf 93       	push	r27
 a5e:	ef 93       	push	r30
 a60:	ff 93       	push	r31
 a62:	18 99       	sbic	0x03, 0	; 3
 a64:	60 c0       	rjmp	.+192    	; 0xb26 <__vector_3+0xe6>
 a66:	18 9b       	sbis	0x03, 0	; 3
 a68:	56 c0       	rjmp	.+172    	; 0xb16 <__vector_3+0xd6>
 a6a:	5d c0       	rjmp	.+186    	; 0xb26 <__vector_3+0xe6>
 a6c:	18 99       	sbic	0x03, 0	; 3
 a6e:	5b c0       	rjmp	.+182    	; 0xb26 <__vector_3+0xe6>
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
 a70:	ef e1       	ldi	r30, 0x1F	; 31
 a72:	f3 e0       	ldi	r31, 0x03	; 3
 a74:	31 97       	sbiw	r30, 0x01	; 1
 a76:	f1 f7       	brne	.-4      	; 0xa74 <__vector_3+0x34>
 a78:	00 c0       	rjmp	.+0      	; 0xa7a <__vector_3+0x3a>
 a7a:	00 00       	nop
 a7c:	81 50       	subi	r24, 0x01	; 1
 a7e:	b1 f7       	brne	.-20     	; 0xa6c <__vector_3+0x2c>
 a80:	18 99       	sbic	0x03, 0	; 3
 a82:	51 c0       	rjmp	.+162    	; 0xb26 <__vector_3+0xe6>
 a84:	2c e0       	ldi	r18, 0x0C	; 12
 a86:	80 e0       	ldi	r24, 0x00	; 0
 a88:	90 e0       	ldi	r25, 0x00	; 0
 a8a:	18 9b       	sbis	0x03, 0	; 3
 a8c:	fe cf       	rjmp	.-4      	; 0xa8a <__vector_3+0x4a>
 a8e:	ef e1       	ldi	r30, 0x1F	; 31
 a90:	fd e0       	ldi	r31, 0x0D	; 13
 a92:	31 97       	sbiw	r30, 0x01	; 1
 a94:	f1 f7       	brne	.-4      	; 0xa92 <__vector_3+0x52>
 a96:	00 c0       	rjmp	.+0      	; 0xa98 <__vector_3+0x58>
 a98:	00 00       	nop
 a9a:	18 9b       	sbis	0x03, 0	; 3
 a9c:	12 c0       	rjmp	.+36     	; 0xac2 <__vector_3+0x82>
 a9e:	18 99       	sbic	0x03, 0	; 3
 aa0:	fe cf       	rjmp	.-4      	; 0xa9e <__vector_3+0x5e>
 aa2:	18 9b       	sbis	0x03, 0	; 3
 aa4:	fe cf       	rjmp	.-4      	; 0xaa2 <__vector_3+0x62>
 aa6:	ef e1       	ldi	r30, 0x1F	; 31
 aa8:	fd e0       	ldi	r31, 0x0D	; 13
 aaa:	31 97       	sbiw	r30, 0x01	; 1
 aac:	f1 f7       	brne	.-4      	; 0xaaa <__vector_3+0x6a>
 aae:	00 c0       	rjmp	.+0      	; 0xab0 <__vector_3+0x70>
 ab0:	00 00       	nop
 ab2:	18 9b       	sbis	0x03, 0	; 3
 ab4:	38 c0       	rjmp	.+112    	; 0xb26 <__vector_3+0xe6>
 ab6:	88 0f       	add	r24, r24
 ab8:	99 1f       	adc	r25, r25
 aba:	81 60       	ori	r24, 0x01	; 1
 abc:	18 99       	sbic	0x03, 0	; 3
 abe:	fe cf       	rjmp	.-4      	; 0xabc <__vector_3+0x7c>
 ac0:	12 c0       	rjmp	.+36     	; 0xae6 <__vector_3+0xa6>
 ac2:	18 9b       	sbis	0x03, 0	; 3
 ac4:	fe cf       	rjmp	.-4      	; 0xac2 <__vector_3+0x82>
 ac6:	ef e1       	ldi	r30, 0x1F	; 31
 ac8:	fd e0       	ldi	r31, 0x0D	; 13
 aca:	31 97       	sbiw	r30, 0x01	; 1
 acc:	f1 f7       	brne	.-4      	; 0xaca <__vector_3+0x8a>
 ace:	00 c0       	rjmp	.+0      	; 0xad0 <__vector_3+0x90>
 ad0:	00 00       	nop
 ad2:	18 99       	sbic	0x03, 0	; 3
 ad4:	03 c0       	rjmp	.+6      	; 0xadc <__vector_3+0x9c>
 ad6:	88 0f       	add	r24, r24
 ad8:	99 1f       	adc	r25, r25
 ada:	05 c0       	rjmp	.+10     	; 0xae6 <__vector_3+0xa6>
 adc:	88 0f       	add	r24, r24
 ade:	99 1f       	adc	r25, r25
 ae0:	81 60       	ori	r24, 0x01	; 1
 ae2:	18 99       	sbic	0x03, 0	; 3
 ae4:	fe cf       	rjmp	.-4      	; 0xae2 <__vector_3+0xa2>
 ae6:	21 50       	subi	r18, 0x01	; 1
 ae8:	81 f6       	brne	.-96     	; 0xa8a <__vector_3+0x4a>
 aea:	20 91 31 01 	lds	r18, 0x0131
 aee:	30 e0       	ldi	r19, 0x00	; 0
 af0:	ac 01       	movw	r20, r24
 af2:	52 95       	swap	r21
 af4:	42 95       	swap	r20
 af6:	4f 70       	andi	r20, 0x0F	; 15
 af8:	45 27       	eor	r20, r21
 afa:	5f 70       	andi	r21, 0x0F	; 15
 afc:	45 27       	eor	r20, r21
 afe:	42 17       	cp	r20, r18
 b00:	53 07       	cpc	r21, r19
 b02:	89 f4       	brne	.+34     	; 0xb26 <__vector_3+0xe6>
 b04:	8f 70       	andi	r24, 0x0F	; 15
 b06:	99 27       	eor	r25, r25
 b08:	00 97       	sbiw	r24, 0x00	; 0
 b0a:	69 f0       	breq	.+26     	; 0xb26 <__vector_3+0xe6>
 b0c:	80 93 30 01 	sts	0x0130, r24
 b10:	0e 94 17 05 	call	0xa2e	; 0xa2e <RF_decode_stop>
 b14:	08 c0       	rjmp	.+16     	; 0xb26 <__vector_3+0xe6>
 b16:	8f e1       	ldi	r24, 0x1F	; 31
 b18:	93 e0       	ldi	r25, 0x03	; 3
 b1a:	01 97       	sbiw	r24, 0x01	; 1
 b1c:	f1 f7       	brne	.-4      	; 0xb1a <__vector_3+0xda>
 b1e:	00 c0       	rjmp	.+0      	; 0xb20 <__vector_3+0xe0>
 b20:	00 00       	nop
 b22:	81 e3       	ldi	r24, 0x31	; 49
 b24:	a3 cf       	rjmp	.-186    	; 0xa6c <__vector_3+0x2c>
 b26:	ff 91       	pop	r31
 b28:	ef 91       	pop	r30
 b2a:	bf 91       	pop	r27
 b2c:	af 91       	pop	r26
 b2e:	9f 91       	pop	r25
 b30:	8f 91       	pop	r24
 b32:	7f 91       	pop	r23
 b34:	6f 91       	pop	r22
 b36:	5f 91       	pop	r21
 b38:	4f 91       	pop	r20
 b3a:	3f 91       	pop	r19
 b3c:	2f 91       	pop	r18
 b3e:	0f 90       	pop	r0
 b40:	0f be       	out	0x3f, r0	; 63
 b42:	0f 90       	pop	r0
 b44:	1f 90       	pop	r1
 b46:	18 95       	reti

00000b48 <__subsf3>:
 b48:	50 58       	subi	r21, 0x80	; 128

00000b4a <__addsf3>:
 b4a:	bb 27       	eor	r27, r27
 b4c:	aa 27       	eor	r26, r26
 b4e:	0e d0       	rcall	.+28     	; 0xb6c <__addsf3x>
 b50:	48 c1       	rjmp	.+656    	; 0xde2 <__fp_round>
 b52:	39 d1       	rcall	.+626    	; 0xdc6 <__fp_pscA>
 b54:	30 f0       	brcs	.+12     	; 0xb62 <__addsf3+0x18>
 b56:	3e d1       	rcall	.+636    	; 0xdd4 <__fp_pscB>
 b58:	20 f0       	brcs	.+8      	; 0xb62 <__addsf3+0x18>
 b5a:	31 f4       	brne	.+12     	; 0xb68 <__addsf3+0x1e>
 b5c:	9f 3f       	cpi	r25, 0xFF	; 255
 b5e:	11 f4       	brne	.+4      	; 0xb64 <__addsf3+0x1a>
 b60:	1e f4       	brtc	.+6      	; 0xb68 <__addsf3+0x1e>
 b62:	2e c1       	rjmp	.+604    	; 0xdc0 <__fp_nan>
 b64:	0e f4       	brtc	.+2      	; 0xb68 <__addsf3+0x1e>
 b66:	e0 95       	com	r30
 b68:	e7 fb       	bst	r30, 7
 b6a:	24 c1       	rjmp	.+584    	; 0xdb4 <__fp_inf>

00000b6c <__addsf3x>:
 b6c:	e9 2f       	mov	r30, r25
 b6e:	4a d1       	rcall	.+660    	; 0xe04 <__fp_split3>
 b70:	80 f3       	brcs	.-32     	; 0xb52 <__addsf3+0x8>
 b72:	ba 17       	cp	r27, r26
 b74:	62 07       	cpc	r22, r18
 b76:	73 07       	cpc	r23, r19
 b78:	84 07       	cpc	r24, r20
 b7a:	95 07       	cpc	r25, r21
 b7c:	18 f0       	brcs	.+6      	; 0xb84 <__addsf3x+0x18>
 b7e:	71 f4       	brne	.+28     	; 0xb9c <__addsf3x+0x30>
 b80:	9e f5       	brtc	.+102    	; 0xbe8 <__addsf3x+0x7c>
 b82:	62 c1       	rjmp	.+708    	; 0xe48 <__fp_zero>
 b84:	0e f4       	brtc	.+2      	; 0xb88 <__addsf3x+0x1c>
 b86:	e0 95       	com	r30
 b88:	0b 2e       	mov	r0, r27
 b8a:	ba 2f       	mov	r27, r26
 b8c:	a0 2d       	mov	r26, r0
 b8e:	0b 01       	movw	r0, r22
 b90:	b9 01       	movw	r22, r18
 b92:	90 01       	movw	r18, r0
 b94:	0c 01       	movw	r0, r24
 b96:	ca 01       	movw	r24, r20
 b98:	a0 01       	movw	r20, r0
 b9a:	11 24       	eor	r1, r1
 b9c:	ff 27       	eor	r31, r31
 b9e:	59 1b       	sub	r21, r25
 ba0:	99 f0       	breq	.+38     	; 0xbc8 <__addsf3x+0x5c>
 ba2:	59 3f       	cpi	r21, 0xF9	; 249
 ba4:	50 f4       	brcc	.+20     	; 0xbba <__addsf3x+0x4e>
 ba6:	50 3e       	cpi	r21, 0xE0	; 224
 ba8:	68 f1       	brcs	.+90     	; 0xc04 <__addsf3x+0x98>
 baa:	1a 16       	cp	r1, r26
 bac:	f0 40       	sbci	r31, 0x00	; 0
 bae:	a2 2f       	mov	r26, r18
 bb0:	23 2f       	mov	r18, r19
 bb2:	34 2f       	mov	r19, r20
 bb4:	44 27       	eor	r20, r20
 bb6:	58 5f       	subi	r21, 0xF8	; 248
 bb8:	f3 cf       	rjmp	.-26     	; 0xba0 <__addsf3x+0x34>
 bba:	46 95       	lsr	r20
 bbc:	37 95       	ror	r19
 bbe:	27 95       	ror	r18
 bc0:	a7 95       	ror	r26
 bc2:	f0 40       	sbci	r31, 0x00	; 0
 bc4:	53 95       	inc	r21
 bc6:	c9 f7       	brne	.-14     	; 0xbba <__addsf3x+0x4e>
 bc8:	7e f4       	brtc	.+30     	; 0xbe8 <__addsf3x+0x7c>
 bca:	1f 16       	cp	r1, r31
 bcc:	ba 0b       	sbc	r27, r26
 bce:	62 0b       	sbc	r22, r18
 bd0:	73 0b       	sbc	r23, r19
 bd2:	84 0b       	sbc	r24, r20
 bd4:	ba f0       	brmi	.+46     	; 0xc04 <__addsf3x+0x98>
 bd6:	91 50       	subi	r25, 0x01	; 1
 bd8:	a1 f0       	breq	.+40     	; 0xc02 <__addsf3x+0x96>
 bda:	ff 0f       	add	r31, r31
 bdc:	bb 1f       	adc	r27, r27
 bde:	66 1f       	adc	r22, r22
 be0:	77 1f       	adc	r23, r23
 be2:	88 1f       	adc	r24, r24
 be4:	c2 f7       	brpl	.-16     	; 0xbd6 <__addsf3x+0x6a>
 be6:	0e c0       	rjmp	.+28     	; 0xc04 <__addsf3x+0x98>
 be8:	ba 0f       	add	r27, r26
 bea:	62 1f       	adc	r22, r18
 bec:	73 1f       	adc	r23, r19
 bee:	84 1f       	adc	r24, r20
 bf0:	48 f4       	brcc	.+18     	; 0xc04 <__addsf3x+0x98>
 bf2:	87 95       	ror	r24
 bf4:	77 95       	ror	r23
 bf6:	67 95       	ror	r22
 bf8:	b7 95       	ror	r27
 bfa:	f7 95       	ror	r31
 bfc:	9e 3f       	cpi	r25, 0xFE	; 254
 bfe:	08 f0       	brcs	.+2      	; 0xc02 <__addsf3x+0x96>
 c00:	b3 cf       	rjmp	.-154    	; 0xb68 <__addsf3+0x1e>
 c02:	93 95       	inc	r25
 c04:	88 0f       	add	r24, r24
 c06:	08 f0       	brcs	.+2      	; 0xc0a <__addsf3x+0x9e>
 c08:	99 27       	eor	r25, r25
 c0a:	ee 0f       	add	r30, r30
 c0c:	97 95       	ror	r25
 c0e:	87 95       	ror	r24
 c10:	08 95       	ret

00000c12 <__divsf3>:
 c12:	0c d0       	rcall	.+24     	; 0xc2c <__divsf3x>
 c14:	e6 c0       	rjmp	.+460    	; 0xde2 <__fp_round>
 c16:	de d0       	rcall	.+444    	; 0xdd4 <__fp_pscB>
 c18:	40 f0       	brcs	.+16     	; 0xc2a <__divsf3+0x18>
 c1a:	d5 d0       	rcall	.+426    	; 0xdc6 <__fp_pscA>
 c1c:	30 f0       	brcs	.+12     	; 0xc2a <__divsf3+0x18>
 c1e:	21 f4       	brne	.+8      	; 0xc28 <__divsf3+0x16>
 c20:	5f 3f       	cpi	r21, 0xFF	; 255
 c22:	19 f0       	breq	.+6      	; 0xc2a <__divsf3+0x18>
 c24:	c7 c0       	rjmp	.+398    	; 0xdb4 <__fp_inf>
 c26:	51 11       	cpse	r21, r1
 c28:	10 c1       	rjmp	.+544    	; 0xe4a <__fp_szero>
 c2a:	ca c0       	rjmp	.+404    	; 0xdc0 <__fp_nan>

00000c2c <__divsf3x>:
 c2c:	eb d0       	rcall	.+470    	; 0xe04 <__fp_split3>
 c2e:	98 f3       	brcs	.-26     	; 0xc16 <__divsf3+0x4>

00000c30 <__divsf3_pse>:
 c30:	99 23       	and	r25, r25
 c32:	c9 f3       	breq	.-14     	; 0xc26 <__divsf3+0x14>
 c34:	55 23       	and	r21, r21
 c36:	b1 f3       	breq	.-20     	; 0xc24 <__divsf3+0x12>
 c38:	95 1b       	sub	r25, r21
 c3a:	55 0b       	sbc	r21, r21
 c3c:	bb 27       	eor	r27, r27
 c3e:	aa 27       	eor	r26, r26
 c40:	62 17       	cp	r22, r18
 c42:	73 07       	cpc	r23, r19
 c44:	84 07       	cpc	r24, r20
 c46:	38 f0       	brcs	.+14     	; 0xc56 <__divsf3_pse+0x26>
 c48:	9f 5f       	subi	r25, 0xFF	; 255
 c4a:	5f 4f       	sbci	r21, 0xFF	; 255
 c4c:	22 0f       	add	r18, r18
 c4e:	33 1f       	adc	r19, r19
 c50:	44 1f       	adc	r20, r20
 c52:	aa 1f       	adc	r26, r26
 c54:	a9 f3       	breq	.-22     	; 0xc40 <__divsf3_pse+0x10>
 c56:	33 d0       	rcall	.+102    	; 0xcbe <__divsf3_pse+0x8e>
 c58:	0e 2e       	mov	r0, r30
 c5a:	3a f0       	brmi	.+14     	; 0xc6a <__divsf3_pse+0x3a>
 c5c:	e0 e8       	ldi	r30, 0x80	; 128
 c5e:	30 d0       	rcall	.+96     	; 0xcc0 <__divsf3_pse+0x90>
 c60:	91 50       	subi	r25, 0x01	; 1
 c62:	50 40       	sbci	r21, 0x00	; 0
 c64:	e6 95       	lsr	r30
 c66:	00 1c       	adc	r0, r0
 c68:	ca f7       	brpl	.-14     	; 0xc5c <__divsf3_pse+0x2c>
 c6a:	29 d0       	rcall	.+82     	; 0xcbe <__divsf3_pse+0x8e>
 c6c:	fe 2f       	mov	r31, r30
 c6e:	27 d0       	rcall	.+78     	; 0xcbe <__divsf3_pse+0x8e>
 c70:	66 0f       	add	r22, r22
 c72:	77 1f       	adc	r23, r23
 c74:	88 1f       	adc	r24, r24
 c76:	bb 1f       	adc	r27, r27
 c78:	26 17       	cp	r18, r22
 c7a:	37 07       	cpc	r19, r23
 c7c:	48 07       	cpc	r20, r24
 c7e:	ab 07       	cpc	r26, r27
 c80:	b0 e8       	ldi	r27, 0x80	; 128
 c82:	09 f0       	breq	.+2      	; 0xc86 <__divsf3_pse+0x56>
 c84:	bb 0b       	sbc	r27, r27
 c86:	80 2d       	mov	r24, r0
 c88:	bf 01       	movw	r22, r30
 c8a:	ff 27       	eor	r31, r31
 c8c:	93 58       	subi	r25, 0x83	; 131
 c8e:	5f 4f       	sbci	r21, 0xFF	; 255
 c90:	2a f0       	brmi	.+10     	; 0xc9c <__divsf3_pse+0x6c>
 c92:	9e 3f       	cpi	r25, 0xFE	; 254
 c94:	51 05       	cpc	r21, r1
 c96:	68 f0       	brcs	.+26     	; 0xcb2 <__divsf3_pse+0x82>
 c98:	8d c0       	rjmp	.+282    	; 0xdb4 <__fp_inf>
 c9a:	d7 c0       	rjmp	.+430    	; 0xe4a <__fp_szero>
 c9c:	5f 3f       	cpi	r21, 0xFF	; 255
 c9e:	ec f3       	brlt	.-6      	; 0xc9a <__divsf3_pse+0x6a>
 ca0:	98 3e       	cpi	r25, 0xE8	; 232
 ca2:	dc f3       	brlt	.-10     	; 0xc9a <__divsf3_pse+0x6a>
 ca4:	86 95       	lsr	r24
 ca6:	77 95       	ror	r23
 ca8:	67 95       	ror	r22
 caa:	b7 95       	ror	r27
 cac:	f7 95       	ror	r31
 cae:	9f 5f       	subi	r25, 0xFF	; 255
 cb0:	c9 f7       	brne	.-14     	; 0xca4 <__divsf3_pse+0x74>
 cb2:	88 0f       	add	r24, r24
 cb4:	91 1d       	adc	r25, r1
 cb6:	96 95       	lsr	r25
 cb8:	87 95       	ror	r24
 cba:	97 f9       	bld	r25, 7
 cbc:	08 95       	ret
 cbe:	e1 e0       	ldi	r30, 0x01	; 1
 cc0:	66 0f       	add	r22, r22
 cc2:	77 1f       	adc	r23, r23
 cc4:	88 1f       	adc	r24, r24
 cc6:	bb 1f       	adc	r27, r27
 cc8:	62 17       	cp	r22, r18
 cca:	73 07       	cpc	r23, r19
 ccc:	84 07       	cpc	r24, r20
 cce:	ba 07       	cpc	r27, r26
 cd0:	20 f0       	brcs	.+8      	; 0xcda <__divsf3_pse+0xaa>
 cd2:	62 1b       	sub	r22, r18
 cd4:	73 0b       	sbc	r23, r19
 cd6:	84 0b       	sbc	r24, r20
 cd8:	ba 0b       	sbc	r27, r26
 cda:	ee 1f       	adc	r30, r30
 cdc:	88 f7       	brcc	.-30     	; 0xcc0 <__divsf3_pse+0x90>
 cde:	e0 95       	com	r30
 ce0:	08 95       	ret

00000ce2 <__fixunssfsi>:
 ce2:	98 d0       	rcall	.+304    	; 0xe14 <__fp_splitA>
 ce4:	88 f0       	brcs	.+34     	; 0xd08 <__fixunssfsi+0x26>
 ce6:	9f 57       	subi	r25, 0x7F	; 127
 ce8:	90 f0       	brcs	.+36     	; 0xd0e <__fixunssfsi+0x2c>
 cea:	b9 2f       	mov	r27, r25
 cec:	99 27       	eor	r25, r25
 cee:	b7 51       	subi	r27, 0x17	; 23
 cf0:	a0 f0       	brcs	.+40     	; 0xd1a <__fixunssfsi+0x38>
 cf2:	d1 f0       	breq	.+52     	; 0xd28 <__fixunssfsi+0x46>
 cf4:	66 0f       	add	r22, r22
 cf6:	77 1f       	adc	r23, r23
 cf8:	88 1f       	adc	r24, r24
 cfa:	99 1f       	adc	r25, r25
 cfc:	1a f0       	brmi	.+6      	; 0xd04 <__fixunssfsi+0x22>
 cfe:	ba 95       	dec	r27
 d00:	c9 f7       	brne	.-14     	; 0xcf4 <__fixunssfsi+0x12>
 d02:	12 c0       	rjmp	.+36     	; 0xd28 <__fixunssfsi+0x46>
 d04:	b1 30       	cpi	r27, 0x01	; 1
 d06:	81 f0       	breq	.+32     	; 0xd28 <__fixunssfsi+0x46>
 d08:	9f d0       	rcall	.+318    	; 0xe48 <__fp_zero>
 d0a:	b1 e0       	ldi	r27, 0x01	; 1
 d0c:	08 95       	ret
 d0e:	9c c0       	rjmp	.+312    	; 0xe48 <__fp_zero>
 d10:	67 2f       	mov	r22, r23
 d12:	78 2f       	mov	r23, r24
 d14:	88 27       	eor	r24, r24
 d16:	b8 5f       	subi	r27, 0xF8	; 248
 d18:	39 f0       	breq	.+14     	; 0xd28 <__fixunssfsi+0x46>
 d1a:	b9 3f       	cpi	r27, 0xF9	; 249
 d1c:	cc f3       	brlt	.-14     	; 0xd10 <__fixunssfsi+0x2e>
 d1e:	86 95       	lsr	r24
 d20:	77 95       	ror	r23
 d22:	67 95       	ror	r22
 d24:	b3 95       	inc	r27
 d26:	d9 f7       	brne	.-10     	; 0xd1e <__fixunssfsi+0x3c>
 d28:	3e f4       	brtc	.+14     	; 0xd38 <__fixunssfsi+0x56>
 d2a:	90 95       	com	r25
 d2c:	80 95       	com	r24
 d2e:	70 95       	com	r23
 d30:	61 95       	neg	r22
 d32:	7f 4f       	sbci	r23, 0xFF	; 255
 d34:	8f 4f       	sbci	r24, 0xFF	; 255
 d36:	9f 4f       	sbci	r25, 0xFF	; 255
 d38:	08 95       	ret

00000d3a <__floatunsisf>:
 d3a:	e8 94       	clt
 d3c:	09 c0       	rjmp	.+18     	; 0xd50 <__floatsisf+0x12>

00000d3e <__floatsisf>:
 d3e:	97 fb       	bst	r25, 7
 d40:	3e f4       	brtc	.+14     	; 0xd50 <__floatsisf+0x12>
 d42:	90 95       	com	r25
 d44:	80 95       	com	r24
 d46:	70 95       	com	r23
 d48:	61 95       	neg	r22
 d4a:	7f 4f       	sbci	r23, 0xFF	; 255
 d4c:	8f 4f       	sbci	r24, 0xFF	; 255
 d4e:	9f 4f       	sbci	r25, 0xFF	; 255
 d50:	99 23       	and	r25, r25
 d52:	a9 f0       	breq	.+42     	; 0xd7e <__floatsisf+0x40>
 d54:	f9 2f       	mov	r31, r25
 d56:	96 e9       	ldi	r25, 0x96	; 150
 d58:	bb 27       	eor	r27, r27
 d5a:	93 95       	inc	r25
 d5c:	f6 95       	lsr	r31
 d5e:	87 95       	ror	r24
 d60:	77 95       	ror	r23
 d62:	67 95       	ror	r22
 d64:	b7 95       	ror	r27
 d66:	f1 11       	cpse	r31, r1
 d68:	f8 cf       	rjmp	.-16     	; 0xd5a <__floatsisf+0x1c>
 d6a:	fa f4       	brpl	.+62     	; 0xdaa <__floatsisf+0x6c>
 d6c:	bb 0f       	add	r27, r27
 d6e:	11 f4       	brne	.+4      	; 0xd74 <__floatsisf+0x36>
 d70:	60 ff       	sbrs	r22, 0
 d72:	1b c0       	rjmp	.+54     	; 0xdaa <__floatsisf+0x6c>
 d74:	6f 5f       	subi	r22, 0xFF	; 255
 d76:	7f 4f       	sbci	r23, 0xFF	; 255
 d78:	8f 4f       	sbci	r24, 0xFF	; 255
 d7a:	9f 4f       	sbci	r25, 0xFF	; 255
 d7c:	16 c0       	rjmp	.+44     	; 0xdaa <__floatsisf+0x6c>
 d7e:	88 23       	and	r24, r24
 d80:	11 f0       	breq	.+4      	; 0xd86 <__floatsisf+0x48>
 d82:	96 e9       	ldi	r25, 0x96	; 150
 d84:	11 c0       	rjmp	.+34     	; 0xda8 <__floatsisf+0x6a>
 d86:	77 23       	and	r23, r23
 d88:	21 f0       	breq	.+8      	; 0xd92 <__floatsisf+0x54>
 d8a:	9e e8       	ldi	r25, 0x8E	; 142
 d8c:	87 2f       	mov	r24, r23
 d8e:	76 2f       	mov	r23, r22
 d90:	05 c0       	rjmp	.+10     	; 0xd9c <__floatsisf+0x5e>
 d92:	66 23       	and	r22, r22
 d94:	71 f0       	breq	.+28     	; 0xdb2 <__floatsisf+0x74>
 d96:	96 e8       	ldi	r25, 0x86	; 134
 d98:	86 2f       	mov	r24, r22
 d9a:	70 e0       	ldi	r23, 0x00	; 0
 d9c:	60 e0       	ldi	r22, 0x00	; 0
 d9e:	2a f0       	brmi	.+10     	; 0xdaa <__floatsisf+0x6c>
 da0:	9a 95       	dec	r25
 da2:	66 0f       	add	r22, r22
 da4:	77 1f       	adc	r23, r23
 da6:	88 1f       	adc	r24, r24
 da8:	da f7       	brpl	.-10     	; 0xda0 <__floatsisf+0x62>
 daa:	88 0f       	add	r24, r24
 dac:	96 95       	lsr	r25
 dae:	87 95       	ror	r24
 db0:	97 f9       	bld	r25, 7
 db2:	08 95       	ret

00000db4 <__fp_inf>:
 db4:	97 f9       	bld	r25, 7
 db6:	9f 67       	ori	r25, 0x7F	; 127
 db8:	80 e8       	ldi	r24, 0x80	; 128
 dba:	70 e0       	ldi	r23, 0x00	; 0
 dbc:	60 e0       	ldi	r22, 0x00	; 0
 dbe:	08 95       	ret

00000dc0 <__fp_nan>:
 dc0:	9f ef       	ldi	r25, 0xFF	; 255
 dc2:	80 ec       	ldi	r24, 0xC0	; 192
 dc4:	08 95       	ret

00000dc6 <__fp_pscA>:
 dc6:	00 24       	eor	r0, r0
 dc8:	0a 94       	dec	r0
 dca:	16 16       	cp	r1, r22
 dcc:	17 06       	cpc	r1, r23
 dce:	18 06       	cpc	r1, r24
 dd0:	09 06       	cpc	r0, r25
 dd2:	08 95       	ret

00000dd4 <__fp_pscB>:
 dd4:	00 24       	eor	r0, r0
 dd6:	0a 94       	dec	r0
 dd8:	12 16       	cp	r1, r18
 dda:	13 06       	cpc	r1, r19
 ddc:	14 06       	cpc	r1, r20
 dde:	05 06       	cpc	r0, r21
 de0:	08 95       	ret

00000de2 <__fp_round>:
 de2:	09 2e       	mov	r0, r25
 de4:	03 94       	inc	r0
 de6:	00 0c       	add	r0, r0
 de8:	11 f4       	brne	.+4      	; 0xdee <__fp_round+0xc>
 dea:	88 23       	and	r24, r24
 dec:	52 f0       	brmi	.+20     	; 0xe02 <__fp_round+0x20>
 dee:	bb 0f       	add	r27, r27
 df0:	40 f4       	brcc	.+16     	; 0xe02 <__fp_round+0x20>
 df2:	bf 2b       	or	r27, r31
 df4:	11 f4       	brne	.+4      	; 0xdfa <__fp_round+0x18>
 df6:	60 ff       	sbrs	r22, 0
 df8:	04 c0       	rjmp	.+8      	; 0xe02 <__fp_round+0x20>
 dfa:	6f 5f       	subi	r22, 0xFF	; 255
 dfc:	7f 4f       	sbci	r23, 0xFF	; 255
 dfe:	8f 4f       	sbci	r24, 0xFF	; 255
 e00:	9f 4f       	sbci	r25, 0xFF	; 255
 e02:	08 95       	ret

00000e04 <__fp_split3>:
 e04:	57 fd       	sbrc	r21, 7
 e06:	90 58       	subi	r25, 0x80	; 128
 e08:	44 0f       	add	r20, r20
 e0a:	55 1f       	adc	r21, r21
 e0c:	59 f0       	breq	.+22     	; 0xe24 <__fp_splitA+0x10>
 e0e:	5f 3f       	cpi	r21, 0xFF	; 255
 e10:	71 f0       	breq	.+28     	; 0xe2e <__fp_splitA+0x1a>
 e12:	47 95       	ror	r20

00000e14 <__fp_splitA>:
 e14:	88 0f       	add	r24, r24
 e16:	97 fb       	bst	r25, 7
 e18:	99 1f       	adc	r25, r25
 e1a:	61 f0       	breq	.+24     	; 0xe34 <__fp_splitA+0x20>
 e1c:	9f 3f       	cpi	r25, 0xFF	; 255
 e1e:	79 f0       	breq	.+30     	; 0xe3e <__fp_splitA+0x2a>
 e20:	87 95       	ror	r24
 e22:	08 95       	ret
 e24:	12 16       	cp	r1, r18
 e26:	13 06       	cpc	r1, r19
 e28:	14 06       	cpc	r1, r20
 e2a:	55 1f       	adc	r21, r21
 e2c:	f2 cf       	rjmp	.-28     	; 0xe12 <__fp_split3+0xe>
 e2e:	46 95       	lsr	r20
 e30:	f1 df       	rcall	.-30     	; 0xe14 <__fp_splitA>
 e32:	08 c0       	rjmp	.+16     	; 0xe44 <__fp_splitA+0x30>
 e34:	16 16       	cp	r1, r22
 e36:	17 06       	cpc	r1, r23
 e38:	18 06       	cpc	r1, r24
 e3a:	99 1f       	adc	r25, r25
 e3c:	f1 cf       	rjmp	.-30     	; 0xe20 <__fp_splitA+0xc>
 e3e:	86 95       	lsr	r24
 e40:	71 05       	cpc	r23, r1
 e42:	61 05       	cpc	r22, r1
 e44:	08 94       	sec
 e46:	08 95       	ret

00000e48 <__fp_zero>:
 e48:	e8 94       	clt

00000e4a <__fp_szero>:
 e4a:	bb 27       	eor	r27, r27
 e4c:	66 27       	eor	r22, r22
 e4e:	77 27       	eor	r23, r23
 e50:	cb 01       	movw	r24, r22
 e52:	97 f9       	bld	r25, 7
 e54:	08 95       	ret

00000e56 <__gesf2>:
 e56:	66 d0       	rcall	.+204    	; 0xf24 <__fp_cmp>
 e58:	08 f4       	brcc	.+2      	; 0xe5c <__gesf2+0x6>
 e5a:	8f ef       	ldi	r24, 0xFF	; 255
 e5c:	08 95       	ret

00000e5e <__mulsf3>:
 e5e:	0b d0       	rcall	.+22     	; 0xe76 <__mulsf3x>
 e60:	c0 cf       	rjmp	.-128    	; 0xde2 <__fp_round>
 e62:	b1 df       	rcall	.-158    	; 0xdc6 <__fp_pscA>
 e64:	28 f0       	brcs	.+10     	; 0xe70 <__mulsf3+0x12>
 e66:	b6 df       	rcall	.-148    	; 0xdd4 <__fp_pscB>
 e68:	18 f0       	brcs	.+6      	; 0xe70 <__mulsf3+0x12>
 e6a:	95 23       	and	r25, r21
 e6c:	09 f0       	breq	.+2      	; 0xe70 <__mulsf3+0x12>
 e6e:	a2 cf       	rjmp	.-188    	; 0xdb4 <__fp_inf>
 e70:	a7 cf       	rjmp	.-178    	; 0xdc0 <__fp_nan>
 e72:	11 24       	eor	r1, r1
 e74:	ea cf       	rjmp	.-44     	; 0xe4a <__fp_szero>

00000e76 <__mulsf3x>:
 e76:	c6 df       	rcall	.-116    	; 0xe04 <__fp_split3>
 e78:	a0 f3       	brcs	.-24     	; 0xe62 <__mulsf3+0x4>

00000e7a <__mulsf3_pse>:
 e7a:	95 9f       	mul	r25, r21
 e7c:	d1 f3       	breq	.-12     	; 0xe72 <__mulsf3+0x14>
 e7e:	95 0f       	add	r25, r21
 e80:	50 e0       	ldi	r21, 0x00	; 0
 e82:	55 1f       	adc	r21, r21
 e84:	62 9f       	mul	r22, r18
 e86:	f0 01       	movw	r30, r0
 e88:	72 9f       	mul	r23, r18
 e8a:	bb 27       	eor	r27, r27
 e8c:	f0 0d       	add	r31, r0
 e8e:	b1 1d       	adc	r27, r1
 e90:	63 9f       	mul	r22, r19
 e92:	aa 27       	eor	r26, r26
 e94:	f0 0d       	add	r31, r0
 e96:	b1 1d       	adc	r27, r1
 e98:	aa 1f       	adc	r26, r26
 e9a:	64 9f       	mul	r22, r20
 e9c:	66 27       	eor	r22, r22
 e9e:	b0 0d       	add	r27, r0
 ea0:	a1 1d       	adc	r26, r1
 ea2:	66 1f       	adc	r22, r22
 ea4:	82 9f       	mul	r24, r18
 ea6:	22 27       	eor	r18, r18
 ea8:	b0 0d       	add	r27, r0
 eaa:	a1 1d       	adc	r26, r1
 eac:	62 1f       	adc	r22, r18
 eae:	73 9f       	mul	r23, r19
 eb0:	b0 0d       	add	r27, r0
 eb2:	a1 1d       	adc	r26, r1
 eb4:	62 1f       	adc	r22, r18
 eb6:	83 9f       	mul	r24, r19
 eb8:	a0 0d       	add	r26, r0
 eba:	61 1d       	adc	r22, r1
 ebc:	22 1f       	adc	r18, r18
 ebe:	74 9f       	mul	r23, r20
 ec0:	33 27       	eor	r19, r19
 ec2:	a0 0d       	add	r26, r0
 ec4:	61 1d       	adc	r22, r1
 ec6:	23 1f       	adc	r18, r19
 ec8:	84 9f       	mul	r24, r20
 eca:	60 0d       	add	r22, r0
 ecc:	21 1d       	adc	r18, r1
 ece:	82 2f       	mov	r24, r18
 ed0:	76 2f       	mov	r23, r22
 ed2:	6a 2f       	mov	r22, r26
 ed4:	11 24       	eor	r1, r1
 ed6:	9f 57       	subi	r25, 0x7F	; 127
 ed8:	50 40       	sbci	r21, 0x00	; 0
 eda:	8a f0       	brmi	.+34     	; 0xefe <__mulsf3_pse+0x84>
 edc:	e1 f0       	breq	.+56     	; 0xf16 <__mulsf3_pse+0x9c>
 ede:	88 23       	and	r24, r24
 ee0:	4a f0       	brmi	.+18     	; 0xef4 <__mulsf3_pse+0x7a>
 ee2:	ee 0f       	add	r30, r30
 ee4:	ff 1f       	adc	r31, r31
 ee6:	bb 1f       	adc	r27, r27
 ee8:	66 1f       	adc	r22, r22
 eea:	77 1f       	adc	r23, r23
 eec:	88 1f       	adc	r24, r24
 eee:	91 50       	subi	r25, 0x01	; 1
 ef0:	50 40       	sbci	r21, 0x00	; 0
 ef2:	a9 f7       	brne	.-22     	; 0xede <__mulsf3_pse+0x64>
 ef4:	9e 3f       	cpi	r25, 0xFE	; 254
 ef6:	51 05       	cpc	r21, r1
 ef8:	70 f0       	brcs	.+28     	; 0xf16 <__mulsf3_pse+0x9c>
 efa:	5c cf       	rjmp	.-328    	; 0xdb4 <__fp_inf>
 efc:	a6 cf       	rjmp	.-180    	; 0xe4a <__fp_szero>
 efe:	5f 3f       	cpi	r21, 0xFF	; 255
 f00:	ec f3       	brlt	.-6      	; 0xefc <__mulsf3_pse+0x82>
 f02:	98 3e       	cpi	r25, 0xE8	; 232
 f04:	dc f3       	brlt	.-10     	; 0xefc <__mulsf3_pse+0x82>
 f06:	86 95       	lsr	r24
 f08:	77 95       	ror	r23
 f0a:	67 95       	ror	r22
 f0c:	b7 95       	ror	r27
 f0e:	f7 95       	ror	r31
 f10:	e7 95       	ror	r30
 f12:	9f 5f       	subi	r25, 0xFF	; 255
 f14:	c1 f7       	brne	.-16     	; 0xf06 <__mulsf3_pse+0x8c>
 f16:	fe 2b       	or	r31, r30
 f18:	88 0f       	add	r24, r24
 f1a:	91 1d       	adc	r25, r1
 f1c:	96 95       	lsr	r25
 f1e:	87 95       	ror	r24
 f20:	97 f9       	bld	r25, 7
 f22:	08 95       	ret

00000f24 <__fp_cmp>:
 f24:	99 0f       	add	r25, r25
 f26:	00 08       	sbc	r0, r0
 f28:	55 0f       	add	r21, r21
 f2a:	aa 0b       	sbc	r26, r26
 f2c:	e0 e8       	ldi	r30, 0x80	; 128
 f2e:	fe ef       	ldi	r31, 0xFE	; 254
 f30:	16 16       	cp	r1, r22
 f32:	17 06       	cpc	r1, r23
 f34:	e8 07       	cpc	r30, r24
 f36:	f9 07       	cpc	r31, r25
 f38:	c0 f0       	brcs	.+48     	; 0xf6a <__fp_cmp+0x46>
 f3a:	12 16       	cp	r1, r18
 f3c:	13 06       	cpc	r1, r19
 f3e:	e4 07       	cpc	r30, r20
 f40:	f5 07       	cpc	r31, r21
 f42:	98 f0       	brcs	.+38     	; 0xf6a <__fp_cmp+0x46>
 f44:	62 1b       	sub	r22, r18
 f46:	73 0b       	sbc	r23, r19
 f48:	84 0b       	sbc	r24, r20
 f4a:	95 0b       	sbc	r25, r21
 f4c:	39 f4       	brne	.+14     	; 0xf5c <__fp_cmp+0x38>
 f4e:	0a 26       	eor	r0, r26
 f50:	61 f0       	breq	.+24     	; 0xf6a <__fp_cmp+0x46>
 f52:	23 2b       	or	r18, r19
 f54:	24 2b       	or	r18, r20
 f56:	25 2b       	or	r18, r21
 f58:	21 f4       	brne	.+8      	; 0xf62 <__fp_cmp+0x3e>
 f5a:	08 95       	ret
 f5c:	0a 26       	eor	r0, r26
 f5e:	09 f4       	brne	.+2      	; 0xf62 <__fp_cmp+0x3e>
 f60:	a1 40       	sbci	r26, 0x01	; 1
 f62:	a6 95       	lsr	r26
 f64:	8f ef       	ldi	r24, 0xFF	; 255
 f66:	81 1d       	adc	r24, r1
 f68:	81 1d       	adc	r24, r1
 f6a:	08 95       	ret

00000f6c <__tablejump2__>:
 f6c:	ee 0f       	add	r30, r30
 f6e:	ff 1f       	adc	r31, r31

00000f70 <__tablejump__>:
 f70:	05 90       	lpm	r0, Z+
 f72:	f4 91       	lpm	r31, Z
 f74:	e0 2d       	mov	r30, r0
 f76:	09 94       	ijmp

00000f78 <__umulhisi3>:
 f78:	a2 9f       	mul	r26, r18
 f7a:	b0 01       	movw	r22, r0
 f7c:	b3 9f       	mul	r27, r19
 f7e:	c0 01       	movw	r24, r0
 f80:	a3 9f       	mul	r26, r19
 f82:	70 0d       	add	r23, r0
 f84:	81 1d       	adc	r24, r1
 f86:	11 24       	eor	r1, r1
 f88:	91 1d       	adc	r25, r1
 f8a:	b2 9f       	mul	r27, r18
 f8c:	70 0d       	add	r23, r0
 f8e:	81 1d       	adc	r24, r1
 f90:	11 24       	eor	r1, r1
 f92:	91 1d       	adc	r25, r1
 f94:	08 95       	ret

00000f96 <__mulshisi3>:
 f96:	b7 ff       	sbrs	r27, 7
 f98:	0c 94 d3 07 	jmp	0xfa6	; 0xfa6 <__muluhisi3>

00000f9c <__mulohisi3>:
 f9c:	0e 94 d3 07 	call	0xfa6	; 0xfa6 <__muluhisi3>
 fa0:	82 1b       	sub	r24, r18
 fa2:	93 0b       	sbc	r25, r19
 fa4:	08 95       	ret

00000fa6 <__muluhisi3>:
 fa6:	0e 94 bc 07 	call	0xf78	; 0xf78 <__umulhisi3>
 faa:	a5 9f       	mul	r26, r21
 fac:	90 0d       	add	r25, r0
 fae:	b4 9f       	mul	r27, r20
 fb0:	90 0d       	add	r25, r0
 fb2:	a4 9f       	mul	r26, r20
 fb4:	80 0d       	add	r24, r0
 fb6:	91 1d       	adc	r25, r1
 fb8:	11 24       	eor	r1, r1
 fba:	08 95       	ret

00000fbc <_exit>:
 fbc:	f8 94       	cli

00000fbe <__stop_program>:
 fbe:	ff cf       	rjmp	.-2      	; 0xfbe <__stop_program>
